// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/auth/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/login">> = Specific
  const handler = {} as typeof import("../../app/auth/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/register/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/register">> = Specific
  const handler = {} as typeof import("../../app/auth/register/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/chrome-ai-showcase/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/chrome-ai-showcase">> = Specific
  const handler = {} as typeof import("../../app/chrome-ai-showcase/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/company/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/company/[id]">> = Specific
  const handler = {} as typeof import("../../app/company/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/contribute/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/contribute">> = Specific
  const handler = {} as typeof import("../../app/contribute/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard-backup/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard-backup">> = Specific
  const handler = {} as typeof import("../../app/dashboard-backup/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../app/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/debug-auth/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/debug-auth">> = Specific
  const handler = {} as typeof import("../../app/debug-auth/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/experiences/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/experiences">> = Specific
  const handler = {} as typeof import("../../app/experiences/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/experiences/share/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/experiences/share">> = Specific
  const handler = {} as typeof import("../../app/experiences/share/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/forum/ask/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/forum/ask">> = Specific
  const handler = {} as typeof import("../../app/forum/ask/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/forum/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/forum">> = Specific
  const handler = {} as typeof import("../../app/forum/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/forum/question/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/forum/question/[id]">> = Specific
  const handler = {} as typeof import("../../app/forum/question/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/interview/history/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/interview/history">> = Specific
  const handler = {} as typeof import("../../app/interview/history/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/interview/hr/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/interview/hr">> = Specific
  const handler = {} as typeof import("../../app/interview/hr/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/interview/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/interview">> = Specific
  const handler = {} as typeof import("../../app/interview/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/interview/results/[sessionId]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/interview/results/[sessionId]">> = Specific
  const handler = {} as typeof import("../../app/interview/results/[sessionId]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/interview/technical/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/interview/technical">> = Specific
  const handler = {} as typeof import("../../app/interview/technical/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/materials/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/materials/[id]">> = Specific
  const handler = {} as typeof import("../../app/materials/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/materials/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/materials">> = Specific
  const handler = {} as typeof import("../../app/materials/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/pricing/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/pricing">> = Specific
  const handler = {} as typeof import("../../app/pricing/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings">> = Specific
  const handler = {} as typeof import("../../app/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/study-planner/my-plans/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/study-planner/my-plans">> = Specific
  const handler = {} as typeof import("../../app/study-planner/my-plans/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/study-planner/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/study-planner">> = Specific
  const handler = {} as typeof import("../../app/study-planner/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/study-planner/plan/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/study-planner/plan/[id]">> = Specific
  const handler = {} as typeof import("../../app/study-planner/plan/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/study-planner/plan/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/study-planner/plan">> = Specific
  const handler = {} as typeof import("../../app/study-planner/plan/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/study-planner/progress/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/study-planner/progress/[id]">> = Specific
  const handler = {} as typeof import("../../app/study-planner/progress/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/test-chrome-ai/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/test-chrome-ai">> = Specific
  const handler = {} as typeof import("../../app/test-chrome-ai/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/users/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/users">> = Specific
  const handler = {} as typeof import("../../app/api/admin/users/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/analytics/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/analytics">> = Specific
  const handler = {} as typeof import("../../app/api/analytics/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/login/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/login">> = Specific
  const handler = {} as typeof import("../../app/api/auth/login/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/logout/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/logout">> = Specific
  const handler = {} as typeof import("../../app/api/auth/logout/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/me/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/me">> = Specific
  const handler = {} as typeof import("../../app/api/auth/me/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/register/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/register">> = Specific
  const handler = {} as typeof import("../../app/api/auth/register/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/companies/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/companies/[id]">> = Specific
  const handler = {} as typeof import("../../app/api/companies/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/companies/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/companies">> = Specific
  const handler = {} as typeof import("../../app/api/companies/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/experiences/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/experiences">> = Specific
  const handler = {} as typeof import("../../app/api/experiences/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/health/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/health">> = Specific
  const handler = {} as typeof import("../../app/api/health/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/interview/answer/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/interview/answer">> = Specific
  const handler = {} as typeof import("../../app/api/interview/answer/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/interview/cleanup/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/interview/cleanup">> = Specific
  const handler = {} as typeof import("../../app/api/interview/cleanup/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/interview/history/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/interview/history">> = Specific
  const handler = {} as typeof import("../../app/api/interview/history/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/interview/results/[sessionId]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/interview/results/[sessionId]">> = Specific
  const handler = {} as typeof import("../../app/api/interview/results/[sessionId]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/interview/start/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/interview/start">> = Specific
  const handler = {} as typeof import("../../app/api/interview/start/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/materials/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/materials/[id]">> = Specific
  const handler = {} as typeof import("../../app/api/materials/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/materials/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/materials">> = Specific
  const handler = {} as typeof import("../../app/api/materials/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/notifications/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/notifications">> = Specific
  const handler = {} as typeof import("../../app/api/notifications/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/payment/create-order/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/payment/create-order">> = Specific
  const handler = {} as typeof import("../../app/api/payment/create-order/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/payment/verify/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/payment/verify">> = Specific
  const handler = {} as typeof import("../../app/api/payment/verify/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/questions/[id]/answers/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/questions/[id]/answers">> = Specific
  const handler = {} as typeof import("../../app/api/questions/[id]/answers/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/questions/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/questions">> = Specific
  const handler = {} as typeof import("../../app/api/questions/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/search/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/search">> = Specific
  const handler = {} as typeof import("../../app/api/search/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/study-plans/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/study-plans/[id]">> = Specific
  const handler = {} as typeof import("../../app/api/study-plans/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/study-plans/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/study-plans">> = Specific
  const handler = {} as typeof import("../../app/api/study-plans/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/upload/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/upload">> = Specific
  const handler = {} as typeof import("../../app/api/upload/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/usage/stats/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/usage/stats">> = Specific
  const handler = {} as typeof import("../../app/api/usage/stats/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/usage/track/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/usage/track">> = Specific
  const handler = {} as typeof import("../../app/api/usage/track/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../app/admin/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/admin">> = Specific
  const handler = {} as typeof import("../../app/admin/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
