// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/auth/login" | "/auth/register" | "/chrome-ai-showcase" | "/company/[id]" | "/contribute" | "/dashboard" | "/dashboard-backup" | "/debug-auth" | "/experiences" | "/experiences/share" | "/forum" | "/forum/ask" | "/forum/question/[id]" | "/interview" | "/interview/history" | "/interview/hr" | "/interview/results/[sessionId]" | "/interview/technical" | "/materials" | "/materials/[id]" | "/pricing" | "/settings" | "/study-planner" | "/study-planner/my-plans" | "/study-planner/plan" | "/study-planner/plan/[id]" | "/study-planner/progress/[id]" | "/test-chrome-ai"
type AppRouteHandlerRoutes = "/api/admin/users" | "/api/analytics" | "/api/auth/login" | "/api/auth/logout" | "/api/auth/me" | "/api/auth/register" | "/api/companies" | "/api/companies/[id]" | "/api/experiences" | "/api/health" | "/api/interview/answer" | "/api/interview/cleanup" | "/api/interview/history" | "/api/interview/results/[sessionId]" | "/api/interview/start" | "/api/materials" | "/api/materials/[id]" | "/api/notifications" | "/api/payment/create-order" | "/api/payment/verify" | "/api/questions" | "/api/questions/[id]/answers" | "/api/search" | "/api/study-plans" | "/api/study-plans/[id]" | "/api/upload" | "/api/usage/stats" | "/api/usage/track"
type PageRoutes = never
type LayoutRoutes = "/" | "/admin"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin": {}
  "/api/admin/users": {}
  "/api/analytics": {}
  "/api/auth/login": {}
  "/api/auth/logout": {}
  "/api/auth/me": {}
  "/api/auth/register": {}
  "/api/companies": {}
  "/api/companies/[id]": { "id": string; }
  "/api/experiences": {}
  "/api/health": {}
  "/api/interview/answer": {}
  "/api/interview/cleanup": {}
  "/api/interview/history": {}
  "/api/interview/results/[sessionId]": { "sessionId": string; }
  "/api/interview/start": {}
  "/api/materials": {}
  "/api/materials/[id]": { "id": string; }
  "/api/notifications": {}
  "/api/payment/create-order": {}
  "/api/payment/verify": {}
  "/api/questions": {}
  "/api/questions/[id]/answers": { "id": string; }
  "/api/search": {}
  "/api/study-plans": {}
  "/api/study-plans/[id]": { "id": string; }
  "/api/upload": {}
  "/api/usage/stats": {}
  "/api/usage/track": {}
  "/auth/login": {}
  "/auth/register": {}
  "/chrome-ai-showcase": {}
  "/company/[id]": { "id": string; }
  "/contribute": {}
  "/dashboard": {}
  "/dashboard-backup": {}
  "/debug-auth": {}
  "/experiences": {}
  "/experiences/share": {}
  "/forum": {}
  "/forum/ask": {}
  "/forum/question/[id]": { "id": string; }
  "/interview": {}
  "/interview/history": {}
  "/interview/hr": {}
  "/interview/results/[sessionId]": { "sessionId": string; }
  "/interview/technical": {}
  "/materials": {}
  "/materials/[id]": { "id": string; }
  "/pricing": {}
  "/settings": {}
  "/study-planner": {}
  "/study-planner/my-plans": {}
  "/study-planner/plan": {}
  "/study-planner/plan/[id]": { "id": string; }
  "/study-planner/progress/[id]": { "id": string; }
  "/test-chrome-ai": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/admin": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
