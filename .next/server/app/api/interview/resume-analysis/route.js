/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/interview/resume-analysis/route";
exports.ids = ["app/api/interview/resume-analysis/route"];
exports.modules = {

/***/ "(rsc)/./app/api/interview/resume-analysis/route.ts":
/*!****************************************************!*\
  !*** ./app/api/interview/resume-analysis/route.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_mongodb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/mongodb */ \"(rsc)/./lib/mongodb.ts\");\n/* harmony import */ var _lib_models_Interview__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/models/Interview */ \"(rsc)/./lib/models/Interview.ts\");\n/* harmony import */ var _lib_interview_questions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/interview-questions */ \"(rsc)/./lib/interview-questions.ts\");\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/auth */ \"(rsc)/./lib/auth.ts\");\n\n\n\n\n\nasync function POST(request) {\n    try {\n        await (0,_lib_mongodb__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n        // Allow both authenticated and anonymous users\n        const user = await (0,_lib_auth__WEBPACK_IMPORTED_MODULE_4__.verifyAuth)(request);\n        const userId = user?.id || `anonymous-${Date.now()}`;\n        const { resumeAnalysis } = await request.json();\n        if (!resumeAnalysis || !resumeAnalysis.skills || !resumeAnalysis.technologies) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Invalid resume analysis data'\n            }, {\n                status: 400\n            });\n        }\n        // Check if user has an active interview session\n        const activeSession = await _lib_models_Interview__WEBPACK_IMPORTED_MODULE_2__.InterviewSession.findOne({\n            userId: userId,\n            status: 'in-progress'\n        });\n        if (activeSession) {\n            // Mark the old session as abandoned and create new one\n            await _lib_models_Interview__WEBPACK_IMPORTED_MODULE_2__.InterviewSession.findByIdAndUpdate(activeSession._id, {\n                status: 'abandoned',\n                endTime: new Date()\n            });\n        }\n        // Generate questions based on resume analysis\n        const questions = (0,_lib_interview_questions__WEBPACK_IMPORTED_MODULE_3__.generateResumeBasedQuestions)(resumeAnalysis, 8);\n        // Create new interview session in MongoDB\n        const session = new _lib_models_Interview__WEBPACK_IMPORTED_MODULE_2__.InterviewSession({\n            userId: userId,\n            type: 'resume-based',\n            resumeAnalysis: resumeAnalysis,\n            questions: questions.map((q)=>({\n                    question: q.question,\n                    answer: '',\n                    timeSpent: 0,\n                    score: 0,\n                    category: q.category,\n                    difficulty: q.difficulty,\n                    keywords: q.keywords\n                }))\n        });\n        await session.save();\n        // Return session with first question\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            sessionId: session._id,\n            type: session.type,\n            currentQuestion: 0,\n            totalQuestions: questions.length,\n            question: questions[0].question,\n            category: questions[0].category,\n            difficulty: questions[0].difficulty,\n            startTime: session.startTime,\n            resumeSkills: resumeAnalysis.skills.slice(0, 5),\n            questions: questions // Include all questions for client-side handling\n        });\n    } catch (error) {\n        console.error('Error starting resume-based interview:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Internal server error'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2ludGVydmlldy9yZXN1bWUtYW5hbHlzaXMvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXVEO0FBQ2xCO0FBQ29CO0FBQ2U7QUFDakM7QUFFaEMsZUFBZUssS0FBS0MsT0FBb0I7SUFDN0MsSUFBSTtRQUNGLE1BQU1MLHdEQUFTQTtRQUVmLCtDQUErQztRQUMvQyxNQUFNTSxPQUFPLE1BQU1ILHFEQUFVQSxDQUFDRTtRQUM5QixNQUFNRSxTQUFTRCxNQUFNRSxNQUFNLENBQUMsVUFBVSxFQUFFQyxLQUFLQyxHQUFHLElBQUk7UUFFcEQsTUFBTSxFQUFFQyxjQUFjLEVBQUUsR0FBRyxNQUFNTixRQUFRTyxJQUFJO1FBRTdDLElBQUksQ0FBQ0Qsa0JBQWtCLENBQUNBLGVBQWVFLE1BQU0sSUFBSSxDQUFDRixlQUFlRyxZQUFZLEVBQUU7WUFDN0UsT0FBT2YscURBQVlBLENBQUNhLElBQUksQ0FBQztnQkFBRUcsT0FBTztZQUErQixHQUFHO2dCQUFFQyxRQUFRO1lBQUk7UUFDcEY7UUFFQSxnREFBZ0Q7UUFDaEQsTUFBTUMsZ0JBQWdCLE1BQU1oQixtRUFBZ0JBLENBQUNpQixPQUFPLENBQUM7WUFDbkRYLFFBQVFBO1lBQ1JTLFFBQVE7UUFDVjtRQUVBLElBQUlDLGVBQWU7WUFDakIsdURBQXVEO1lBQ3ZELE1BQU1oQixtRUFBZ0JBLENBQUNrQixpQkFBaUIsQ0FBQ0YsY0FBY0csR0FBRyxFQUFFO2dCQUMxREosUUFBUTtnQkFDUkssU0FBUyxJQUFJWjtZQUNmO1FBQ0Y7UUFFQSw4Q0FBOEM7UUFDOUMsTUFBTWEsWUFBWXBCLHNGQUE0QkEsQ0FBQ1MsZ0JBQWdCO1FBRS9ELDBDQUEwQztRQUMxQyxNQUFNWSxVQUFVLElBQUl0QixtRUFBZ0JBLENBQUM7WUFDbkNNLFFBQVFBO1lBQ1JpQixNQUFNO1lBQ05iLGdCQUFnQkE7WUFDaEJXLFdBQVdBLFVBQVVHLEdBQUcsQ0FBQ0MsQ0FBQUEsSUFBTTtvQkFDN0JDLFVBQVVELEVBQUVDLFFBQVE7b0JBQ3BCQyxRQUFRO29CQUNSQyxXQUFXO29CQUNYQyxPQUFPO29CQUNQQyxVQUFVTCxFQUFFSyxRQUFRO29CQUNwQkMsWUFBWU4sRUFBRU0sVUFBVTtvQkFDeEJDLFVBQVVQLEVBQUVPLFFBQVE7Z0JBQ3RCO1FBQ0Y7UUFFQSxNQUFNVixRQUFRVyxJQUFJO1FBRWxCLHFDQUFxQztRQUNyQyxPQUFPbkMscURBQVlBLENBQUNhLElBQUksQ0FBQztZQUN2QnVCLFdBQVdaLFFBQVFILEdBQUc7WUFDdEJJLE1BQU1ELFFBQVFDLElBQUk7WUFDbEJZLGlCQUFpQjtZQUNqQkMsZ0JBQWdCZixVQUFVZ0IsTUFBTTtZQUNoQ1gsVUFBVUwsU0FBUyxDQUFDLEVBQUUsQ0FBQ0ssUUFBUTtZQUMvQkksVUFBVVQsU0FBUyxDQUFDLEVBQUUsQ0FBQ1MsUUFBUTtZQUMvQkMsWUFBWVYsU0FBUyxDQUFDLEVBQUUsQ0FBQ1UsVUFBVTtZQUNuQ08sV0FBV2hCLFFBQVFnQixTQUFTO1lBQzVCQyxjQUFjN0IsZUFBZUUsTUFBTSxDQUFDNEIsS0FBSyxDQUFDLEdBQUc7WUFDN0NuQixXQUFXQSxVQUFVLGlEQUFpRDtRQUN4RTtJQUVGLEVBQUUsT0FBT1AsT0FBTztRQUNkMkIsUUFBUTNCLEtBQUssQ0FBQywwQ0FBMENBO1FBQ3hELE9BQU9oQixxREFBWUEsQ0FBQ2EsSUFBSSxDQUFDO1lBQUVHLE9BQU87UUFBd0IsR0FBRztZQUFFQyxRQUFRO1FBQUk7SUFDN0U7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhYWthc1xcRG93bmxvYWRzXFxPcGVuUHJlcFxcYXBwXFxhcGlcXGludGVydmlld1xccmVzdW1lLWFuYWx5c2lzXFxyb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInXHJcbmltcG9ydCBjb25uZWN0REIgZnJvbSAnQC9saWIvbW9uZ29kYidcclxuaW1wb3J0IHsgSW50ZXJ2aWV3U2Vzc2lvbiB9IGZyb20gJ0AvbGliL21vZGVscy9JbnRlcnZpZXcnXHJcbmltcG9ydCB7IGdlbmVyYXRlUmVzdW1lQmFzZWRRdWVzdGlvbnMgfSBmcm9tICdAL2xpYi9pbnRlcnZpZXctcXVlc3Rpb25zJ1xyXG5pbXBvcnQgeyB2ZXJpZnlBdXRoIH0gZnJvbSAnQC9saWIvYXV0aCdcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XHJcbiAgdHJ5IHtcclxuICAgIGF3YWl0IGNvbm5lY3REQigpXHJcbiAgICBcclxuICAgIC8vIEFsbG93IGJvdGggYXV0aGVudGljYXRlZCBhbmQgYW5vbnltb3VzIHVzZXJzXHJcbiAgICBjb25zdCB1c2VyID0gYXdhaXQgdmVyaWZ5QXV0aChyZXF1ZXN0KVxyXG4gICAgY29uc3QgdXNlcklkID0gdXNlcj8uaWQgfHwgYGFub255bW91cy0ke0RhdGUubm93KCl9YFxyXG5cclxuICAgIGNvbnN0IHsgcmVzdW1lQW5hbHlzaXMgfSA9IGF3YWl0IHJlcXVlc3QuanNvbigpXHJcbiAgICBcclxuICAgIGlmICghcmVzdW1lQW5hbHlzaXMgfHwgIXJlc3VtZUFuYWx5c2lzLnNraWxscyB8fCAhcmVzdW1lQW5hbHlzaXMudGVjaG5vbG9naWVzKSB7XHJcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiAnSW52YWxpZCByZXN1bWUgYW5hbHlzaXMgZGF0YScgfSwgeyBzdGF0dXM6IDQwMCB9KVxyXG4gICAgfVxyXG5cclxuICAgIC8vIENoZWNrIGlmIHVzZXIgaGFzIGFuIGFjdGl2ZSBpbnRlcnZpZXcgc2Vzc2lvblxyXG4gICAgY29uc3QgYWN0aXZlU2Vzc2lvbiA9IGF3YWl0IEludGVydmlld1Nlc3Npb24uZmluZE9uZSh7XHJcbiAgICAgIHVzZXJJZDogdXNlcklkLFxyXG4gICAgICBzdGF0dXM6ICdpbi1wcm9ncmVzcydcclxuICAgIH0pXHJcblxyXG4gICAgaWYgKGFjdGl2ZVNlc3Npb24pIHtcclxuICAgICAgLy8gTWFyayB0aGUgb2xkIHNlc3Npb24gYXMgYWJhbmRvbmVkIGFuZCBjcmVhdGUgbmV3IG9uZVxyXG4gICAgICBhd2FpdCBJbnRlcnZpZXdTZXNzaW9uLmZpbmRCeUlkQW5kVXBkYXRlKGFjdGl2ZVNlc3Npb24uX2lkLCB7IFxyXG4gICAgICAgIHN0YXR1czogJ2FiYW5kb25lZCcsXHJcbiAgICAgICAgZW5kVGltZTogbmV3IERhdGUoKVxyXG4gICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIC8vIEdlbmVyYXRlIHF1ZXN0aW9ucyBiYXNlZCBvbiByZXN1bWUgYW5hbHlzaXNcclxuICAgIGNvbnN0IHF1ZXN0aW9ucyA9IGdlbmVyYXRlUmVzdW1lQmFzZWRRdWVzdGlvbnMocmVzdW1lQW5hbHlzaXMsIDgpXHJcbiAgICBcclxuICAgIC8vIENyZWF0ZSBuZXcgaW50ZXJ2aWV3IHNlc3Npb24gaW4gTW9uZ29EQlxyXG4gICAgY29uc3Qgc2Vzc2lvbiA9IG5ldyBJbnRlcnZpZXdTZXNzaW9uKHtcclxuICAgICAgdXNlcklkOiB1c2VySWQsXHJcbiAgICAgIHR5cGU6ICdyZXN1bWUtYmFzZWQnLFxyXG4gICAgICByZXN1bWVBbmFseXNpczogcmVzdW1lQW5hbHlzaXMsXHJcbiAgICAgIHF1ZXN0aW9uczogcXVlc3Rpb25zLm1hcChxID0+ICh7XHJcbiAgICAgICAgcXVlc3Rpb246IHEucXVlc3Rpb24sXHJcbiAgICAgICAgYW5zd2VyOiAnJyxcclxuICAgICAgICB0aW1lU3BlbnQ6IDAsXHJcbiAgICAgICAgc2NvcmU6IDAsXHJcbiAgICAgICAgY2F0ZWdvcnk6IHEuY2F0ZWdvcnksXHJcbiAgICAgICAgZGlmZmljdWx0eTogcS5kaWZmaWN1bHR5LFxyXG4gICAgICAgIGtleXdvcmRzOiBxLmtleXdvcmRzXHJcbiAgICAgIH0pKVxyXG4gICAgfSlcclxuXHJcbiAgICBhd2FpdCBzZXNzaW9uLnNhdmUoKVxyXG5cclxuICAgIC8vIFJldHVybiBzZXNzaW9uIHdpdGggZmlyc3QgcXVlc3Rpb25cclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XHJcbiAgICAgIHNlc3Npb25JZDogc2Vzc2lvbi5faWQsXHJcbiAgICAgIHR5cGU6IHNlc3Npb24udHlwZSxcclxuICAgICAgY3VycmVudFF1ZXN0aW9uOiAwLFxyXG4gICAgICB0b3RhbFF1ZXN0aW9uczogcXVlc3Rpb25zLmxlbmd0aCxcclxuICAgICAgcXVlc3Rpb246IHF1ZXN0aW9uc1swXS5xdWVzdGlvbixcclxuICAgICAgY2F0ZWdvcnk6IHF1ZXN0aW9uc1swXS5jYXRlZ29yeSxcclxuICAgICAgZGlmZmljdWx0eTogcXVlc3Rpb25zWzBdLmRpZmZpY3VsdHksXHJcbiAgICAgIHN0YXJ0VGltZTogc2Vzc2lvbi5zdGFydFRpbWUsXHJcbiAgICAgIHJlc3VtZVNraWxsczogcmVzdW1lQW5hbHlzaXMuc2tpbGxzLnNsaWNlKDAsIDUpLFxyXG4gICAgICBxdWVzdGlvbnM6IHF1ZXN0aW9ucyAvLyBJbmNsdWRlIGFsbCBxdWVzdGlvbnMgZm9yIGNsaWVudC1zaWRlIGhhbmRsaW5nXHJcbiAgICB9KVxyXG5cclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3Igc3RhcnRpbmcgcmVzdW1lLWJhc2VkIGludGVydmlldzonLCBlcnJvcilcclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiAnSW50ZXJuYWwgc2VydmVyIGVycm9yJyB9LCB7IHN0YXR1czogNTAwIH0pXHJcbiAgfVxyXG59Il0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsImNvbm5lY3REQiIsIkludGVydmlld1Nlc3Npb24iLCJnZW5lcmF0ZVJlc3VtZUJhc2VkUXVlc3Rpb25zIiwidmVyaWZ5QXV0aCIsIlBPU1QiLCJyZXF1ZXN0IiwidXNlciIsInVzZXJJZCIsImlkIiwiRGF0ZSIsIm5vdyIsInJlc3VtZUFuYWx5c2lzIiwianNvbiIsInNraWxscyIsInRlY2hub2xvZ2llcyIsImVycm9yIiwic3RhdHVzIiwiYWN0aXZlU2Vzc2lvbiIsImZpbmRPbmUiLCJmaW5kQnlJZEFuZFVwZGF0ZSIsIl9pZCIsImVuZFRpbWUiLCJxdWVzdGlvbnMiLCJzZXNzaW9uIiwidHlwZSIsIm1hcCIsInEiLCJxdWVzdGlvbiIsImFuc3dlciIsInRpbWVTcGVudCIsInNjb3JlIiwiY2F0ZWdvcnkiLCJkaWZmaWN1bHR5Iiwia2V5d29yZHMiLCJzYXZlIiwic2Vzc2lvbklkIiwiY3VycmVudFF1ZXN0aW9uIiwidG90YWxRdWVzdGlvbnMiLCJsZW5ndGgiLCJzdGFydFRpbWUiLCJyZXN1bWVTa2lsbHMiLCJzbGljZSIsImNvbnNvbGUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/interview/resume-analysis/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/auth.ts":
/*!*********************!*\
  !*** ./lib/auth.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkSubscriptionLimits: () => (/* binding */ checkSubscriptionLimits),\n/* harmony export */   generateToken: () => (/* binding */ generateToken),\n/* harmony export */   getAllUsers: () => (/* binding */ getAllUsers),\n/* harmony export */   getUserById: () => (/* binding */ getUserById),\n/* harmony export */   getUserStats: () => (/* binding */ getUserStats),\n/* harmony export */   hashPassword: () => (/* binding */ hashPassword),\n/* harmony export */   loginUser: () => (/* binding */ loginUser),\n/* harmony export */   registerUser: () => (/* binding */ registerUser),\n/* harmony export */   trackUserUsage: () => (/* binding */ trackUserUsage),\n/* harmony export */   updateUserProfile: () => (/* binding */ updateUserProfile),\n/* harmony export */   verifyAuth: () => (/* binding */ verifyAuth),\n/* harmony export */   verifyPassword: () => (/* binding */ verifyPassword),\n/* harmony export */   verifyToken: () => (/* binding */ verifyToken)\n/* harmony export */ });\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jsonwebtoken */ \"(rsc)/./node_modules/jsonwebtoken/index.js\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _mongodb__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mongodb */ \"(rsc)/./lib/mongodb.ts\");\n/* harmony import */ var _models_User__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./models/User */ \"(rsc)/./lib/models/User.ts\");\n\n\n\n\nconst JWT_SECRET = process.env.JWT_SECRET || 'your-super-secret-jwt-key-change-in-production';\n// Hash password\nasync function hashPassword(password) {\n    const salt = await bcryptjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].genSalt(12);\n    return bcryptjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hash(password, salt);\n}\n// Verify password\nasync function verifyPassword(password, hashedPassword) {\n    return bcryptjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].compare(password, hashedPassword);\n}\n// Generate JWT token\nfunction generateToken(user) {\n    return jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().sign({\n        id: user.id,\n        email: user.email,\n        subscriptionTier: user.subscriptionTier\n    }, JWT_SECRET, {\n        expiresIn: '30d'\n    } // 30 days for better persistence\n    );\n}\n// Verify authentication from request (supports both cookies and Bearer tokens)\nasync function verifyAuth(request) {\n    try {\n        let token = null;\n        // First try to get token from Authorization header\n        const authHeader = request.headers.get('authorization');\n        if (authHeader && authHeader.startsWith('Bearer ')) {\n            token = authHeader.substring(7); // Remove 'Bearer ' prefix\n        }\n        // If no Bearer token, try to get from cookies (NextRequest has cookies method)\n        if (!token && 'cookies' in request) {\n            token = request.cookies.get('auth-token')?.value || null;\n        }\n        if (!token) {\n            return null;\n        }\n        return await verifyToken(token);\n    } catch (error) {\n        console.error('Auth verification error:', error);\n        return null;\n    }\n}\n// Verify JWT token\nasync function verifyToken(token) {\n    try {\n        // First verify the JWT token structure\n        const decoded = jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().verify(token, JWT_SECRET);\n        // If JWT is valid, try to connect to database with retry logic\n        let retries = 3;\n        let user = null;\n        while(retries > 0 && !user){\n            try {\n                await (0,_mongodb__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n                // Find user by custom id field (not MongoDB _id)\n                user = await _models_User__WEBPACK_IMPORTED_MODULE_3__[\"default\"].findOne({\n                    id: decoded.id\n                }).lean();\n                if (!user) {\n                    // Try to find by email as fallback\n                    const userByEmail = await _models_User__WEBPACK_IMPORTED_MODULE_3__[\"default\"].findOne({\n                        email: decoded.email\n                    }).lean();\n                    if (userByEmail) {\n                        user = userByEmail;\n                    }\n                }\n                break; // Success, exit retry loop\n            } catch (dbError) {\n                retries--;\n                console.warn(`Database connection attempt failed, retries left: ${retries}`, dbError);\n                if (retries > 0) {\n                    // Wait before retrying\n                    await new Promise((resolve)=>setTimeout(resolve, 1000));\n                }\n            }\n        }\n        if (!user) {\n            console.warn('User not found in database for token:', decoded.id);\n            return null;\n        }\n        return {\n            id: user.id,\n            email: user.email,\n            name: user.name,\n            subscriptionTier: user.subscriptionTier,\n            subscriptionStatus: user.subscriptionStatus\n        };\n    } catch (error) {\n        if (error.name === 'JsonWebTokenError') {\n            console.warn('Invalid JWT token');\n        } else if (error.name === 'TokenExpiredError') {\n            console.warn('JWT token expired');\n        } else {\n            console.error('Token verification error:', error);\n        }\n        return null;\n    }\n}\n// Register new user\nasync function registerUser(userData) {\n    try {\n        await (0,_mongodb__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n        // Check if user already exists\n        const existingUser = await _models_User__WEBPACK_IMPORTED_MODULE_3__[\"default\"].findOne({\n            email: userData.email.toLowerCase()\n        });\n        if (existingUser) {\n            console.log('Registration attempt with existing email:', userData.email);\n            throw new Error('User already exists with this email');\n        }\n        // Hash password\n        const hashedPassword = await hashPassword(userData.password);\n        // Create user with comprehensive data\n        const user = new _models_User__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\n            id: `user-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n            email: userData.email.toLowerCase().trim(),\n            password: hashedPassword,\n            name: userData.name.trim(),\n            profile: {\n                college: userData.college?.trim() || null,\n                graduationYear: userData.graduationYear || null,\n                targetCompanies: [],\n                preparationLevel: 'beginner',\n                focusAreas: []\n            },\n            subscriptionTier: 'free',\n            subscriptionStatus: 'active',\n            subscriptionStartDate: new Date(),\n            subscriptionEndDate: null,\n            stripeCustomerId: null,\n            usage: {\n                studyPlansGenerated: 0,\n                companiesAccessed: [],\n                forumPostsCreated: 0,\n                lastActiveDate: new Date()\n            },\n            preferences: {\n                emailNotifications: true,\n                studyReminders: true,\n                weeklyProgress: true\n            }\n        });\n        console.log('Creating new user:', {\n            email: userData.email,\n            name: userData.name\n        });\n        const savedUser = await user.save();\n        console.log('User successfully saved to MongoDB:', savedUser.id);\n        const authUser = {\n            id: savedUser.id,\n            email: savedUser.email,\n            name: savedUser.name,\n            subscriptionTier: savedUser.subscriptionTier,\n            subscriptionStatus: savedUser.subscriptionStatus\n        };\n        const token = generateToken(authUser);\n        return {\n            user: authUser,\n            token\n        };\n    } catch (error) {\n        console.error('Error registering user:', error);\n        return null;\n    }\n}\n// Login user\nasync function loginUser(credentials) {\n    try {\n        await (0,_mongodb__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n        console.log('Login attempt for email:', credentials.email);\n        // Find user by email with timeout\n        const user = await Promise.race([\n            _models_User__WEBPACK_IMPORTED_MODULE_3__[\"default\"].findOne({\n                email: credentials.email.toLowerCase().trim()\n            }),\n            new Promise((_, reject)=>setTimeout(()=>reject(new Error('Database query timeout')), 10000))\n        ]);\n        if (!user) {\n            console.log('User not found for email:', credentials.email);\n            throw new Error('Invalid email or password');\n        }\n        // Verify password\n        const isValidPassword = await verifyPassword(credentials.password, user.password);\n        if (!isValidPassword) {\n            console.log('Invalid password for user:', credentials.email);\n            throw new Error('Invalid email or password');\n        }\n        // Update last active date and login tracking\n        user.usage.lastActiveDate = new Date();\n        await user.save();\n        console.log('User successfully logged in:', user.id);\n        const authUser = {\n            id: user.id,\n            email: user.email,\n            name: user.name,\n            subscriptionTier: user.subscriptionTier,\n            subscriptionStatus: user.subscriptionStatus\n        };\n        const token = generateToken(authUser);\n        return {\n            user: authUser,\n            token\n        };\n    } catch (error) {\n        console.error('Error logging in user:', error);\n        return null;\n    }\n}\n// Get user by ID\nasync function getUserById(userId) {\n    try {\n        await (0,_mongodb__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n        const user = await _models_User__WEBPACK_IMPORTED_MODULE_3__[\"default\"].findOne({\n            id: userId\n        }).lean();\n        return user;\n    } catch (error) {\n        console.error('Error fetching user:', error);\n        return null;\n    }\n}\n// Update user profile\nasync function updateUserProfile(userId, updates) {\n    try {\n        await (0,_mongodb__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n        const user = await _models_User__WEBPACK_IMPORTED_MODULE_3__[\"default\"].findOneAndUpdate({\n            id: userId\n        }, {\n            ...updates,\n            updatedAt: new Date()\n        }, {\n            new: true,\n            runValidators: true\n        }).lean();\n        return user;\n    } catch (error) {\n        console.error('Error updating user profile:', error);\n        return null;\n    }\n}\n// Check subscription limits\nfunction checkSubscriptionLimits(user, action) {\n    switch(user.subscriptionTier){\n        case 'free':\n            // Free tier limitations will be checked in specific functions\n            return true;\n        case 'pro':\n            return true;\n        case 'premium':\n            return true;\n        default:\n            return false;\n    }\n}\n// Track user usage\nasync function trackUserUsage(userId, action, data) {\n    try {\n        await (0,_mongodb__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n        const updateQuery = {\n            'usage.lastActiveDate': new Date()\n        };\n        switch(action){\n            case 'study_plan':\n                updateQuery['$inc'] = {\n                    'usage.studyPlansGenerated': 1\n                };\n                break;\n            case 'company_access':\n                if (data?.companyId) {\n                    updateQuery['$addToSet'] = {\n                        'usage.companiesAccessed': data.companyId\n                    };\n                }\n                break;\n            case 'forum_post':\n                updateQuery['$inc'] = {\n                    'usage.forumPostsCreated': 1\n                };\n                break;\n        }\n        await _models_User__WEBPACK_IMPORTED_MODULE_3__[\"default\"].updateOne({\n            id: userId\n        }, updateQuery);\n    } catch (error) {\n        console.error('Error tracking user usage:', error);\n    }\n}\n// Admin utility functions for debugging\nasync function getAllUsers() {\n    try {\n        await (0,_mongodb__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n        const users = await _models_User__WEBPACK_IMPORTED_MODULE_3__[\"default\"].find({}).select('-password').lean();\n        return users;\n    } catch (error) {\n        console.error('Error fetching all users:', error);\n        return [];\n    }\n}\nasync function getUserStats() {\n    try {\n        await (0,_mongodb__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n        const totalUsers = await _models_User__WEBPACK_IMPORTED_MODULE_3__[\"default\"].countDocuments({});\n        const freeUsers = await _models_User__WEBPACK_IMPORTED_MODULE_3__[\"default\"].countDocuments({\n            subscriptionTier: 'free'\n        });\n        const proUsers = await _models_User__WEBPACK_IMPORTED_MODULE_3__[\"default\"].countDocuments({\n            subscriptionTier: 'pro'\n        });\n        const premiumUsers = await _models_User__WEBPACK_IMPORTED_MODULE_3__[\"default\"].countDocuments({\n            subscriptionTier: 'premium'\n        });\n        // Users created in last 7 days\n        const sevenDaysAgo = new Date();\n        sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);\n        const recentUsers = await _models_User__WEBPACK_IMPORTED_MODULE_3__[\"default\"].countDocuments({\n            createdAt: {\n                $gte: sevenDaysAgo\n            }\n        });\n        return {\n            totalUsers,\n            freeUsers,\n            proUsers,\n            premiumUsers,\n            recentUsers\n        };\n    } catch (error) {\n        console.error('Error fetching user stats:', error);\n        return {\n            totalUsers: 0,\n            freeUsers: 0,\n            proUsers: 0,\n            premiumUsers: 0,\n            recentUsers: 0\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/auth.ts\n");

/***/ }),

/***/ "(rsc)/./lib/interview-questions.ts":
/*!************************************!*\
  !*** ./lib/interview-questions.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateResumeBasedQuestions: () => (/* binding */ generateResumeBasedQuestions),\n/* harmony export */   getRandomQuestions: () => (/* binding */ getRandomQuestions),\n/* harmony export */   hrQuestions: () => (/* binding */ hrQuestions),\n/* harmony export */   technicalQuestions: () => (/* binding */ technicalQuestions)\n/* harmony export */ });\n// Standard interview questions with keywords for evaluation\nconst technicalQuestions = [\n    {\n        question: \"Explain the difference between let, const, and var in JavaScript.\",\n        category: \"JavaScript\",\n        difficulty: \"medium\",\n        keywords: [\n            \"scope\",\n            \"hoisting\",\n            \"block scope\",\n            \"function scope\",\n            \"reassignment\",\n            \"redeclaration\",\n            \"temporal dead zone\"\n        ],\n        sampleAnswer: \"var has function scope and is hoisted, let and const have block scope. const cannot be reassigned, let can be. var allows redeclaration, let and const don't.\",\n        companies: [\n            \"Google\",\n            \"Microsoft\",\n            \"Amazon\",\n            \"Meta\"\n        ]\n    },\n    {\n        question: \"What is the difference between == and === in JavaScript?\",\n        category: \"JavaScript\",\n        difficulty: \"easy\",\n        keywords: [\n            \"type coercion\",\n            \"strict equality\",\n            \"loose equality\",\n            \"type conversion\",\n            \"comparison\"\n        ],\n        sampleAnswer: \"== performs type coercion before comparison, === checks both value and type without coercion.\",\n        companies: [\n            \"Netflix\",\n            \"Uber\",\n            \"Airbnb\"\n        ]\n    },\n    {\n        question: \"Explain closures in JavaScript with an example.\",\n        category: \"JavaScript\",\n        difficulty: \"hard\",\n        keywords: [\n            \"lexical scope\",\n            \"inner function\",\n            \"outer function\",\n            \"variable access\",\n            \"memory\",\n            \"encapsulation\"\n        ],\n        sampleAnswer: \"A closure is when an inner function has access to variables from its outer function's scope even after the outer function has returned.\",\n        companies: [\n            \"Google\",\n            \"Meta\",\n            \"Apple\"\n        ]\n    },\n    {\n        question: \"What is the Virtual DOM in React and why is it useful?\",\n        category: \"React\",\n        difficulty: \"medium\",\n        keywords: [\n            \"virtual dom\",\n            \"reconciliation\",\n            \"diffing\",\n            \"performance\",\n            \"real dom\",\n            \"batching\",\n            \"efficient updates\"\n        ],\n        sampleAnswer: \"Virtual DOM is a JavaScript representation of the real DOM. React uses it to efficiently update the UI by comparing changes and updating only what's necessary.\",\n        companies: [\n            \"Meta\",\n            \"Netflix\",\n            \"Airbnb\"\n        ]\n    },\n    {\n        question: \"Explain the concept of state management in React.\",\n        category: \"React\",\n        difficulty: \"medium\",\n        keywords: [\n            \"state\",\n            \"props\",\n            \"useState\",\n            \"component state\",\n            \"lifting state up\",\n            \"redux\",\n            \"context\"\n        ],\n        sampleAnswer: \"State management involves handling data that changes over time in React components using useState, useReducer, Context API, or external libraries like Redux.\",\n        companies: [\n            \"Meta\",\n            \"Uber\",\n            \"Spotify\"\n        ]\n    },\n    {\n        question: \"What are React Hooks and why were they introduced?\",\n        category: \"React\",\n        difficulty: \"medium\",\n        keywords: [\n            \"hooks\",\n            \"functional components\",\n            \"useState\",\n            \"useEffect\",\n            \"class components\",\n            \"lifecycle\",\n            \"reusability\"\n        ],\n        sampleAnswer: \"Hooks allow functional components to use state and lifecycle methods. They were introduced to simplify component logic and improve code reusability.\",\n        companies: [\n            \"Meta\",\n            \"Google\",\n            \"Microsoft\"\n        ]\n    },\n    {\n        question: \"Explain the difference between SQL and NoSQL databases.\",\n        category: \"Database\",\n        difficulty: \"medium\",\n        keywords: [\n            \"relational\",\n            \"non-relational\",\n            \"schema\",\n            \"ACID\",\n            \"scalability\",\n            \"consistency\",\n            \"flexibility\"\n        ],\n        sampleAnswer: \"SQL databases are relational with fixed schemas and ACID properties. NoSQL databases are non-relational, more flexible, and better for horizontal scaling.\",\n        companies: [\n            \"Amazon\",\n            \"Google\",\n            \"MongoDB\"\n        ]\n    },\n    {\n        question: \"What is REST API and what are its principles?\",\n        category: \"API\",\n        difficulty: \"medium\",\n        keywords: [\n            \"REST\",\n            \"stateless\",\n            \"HTTP methods\",\n            \"GET\",\n            \"POST\",\n            \"PUT\",\n            \"DELETE\",\n            \"resources\",\n            \"uniform interface\"\n        ],\n        sampleAnswer: \"REST is an architectural style for web services that uses HTTP methods, is stateless, and treats everything as resources with uniform interfaces.\",\n        companies: [\n            \"Amazon\",\n            \"Microsoft\",\n            \"Stripe\"\n        ]\n    },\n    {\n        question: \"Explain the concept of Big O notation.\",\n        category: \"Algorithms\",\n        difficulty: \"hard\",\n        keywords: [\n            \"time complexity\",\n            \"space complexity\",\n            \"algorithm efficiency\",\n            \"worst case\",\n            \"average case\",\n            \"scalability\"\n        ],\n        sampleAnswer: \"Big O notation describes the upper bound of algorithm complexity, helping us understand how performance scales with input size.\",\n        companies: [\n            \"Google\",\n            \"Amazon\",\n            \"Meta\"\n        ]\n    },\n    {\n        question: \"What is the difference between authentication and authorization?\",\n        category: \"Security\",\n        difficulty: \"easy\",\n        keywords: [\n            \"authentication\",\n            \"authorization\",\n            \"identity\",\n            \"permissions\",\n            \"access control\",\n            \"JWT\",\n            \"OAuth\"\n        ],\n        sampleAnswer: \"Authentication verifies who you are (identity), authorization determines what you can access (permissions).\",\n        companies: [\n            \"Auth0\",\n            \"Okta\",\n            \"Microsoft\"\n        ]\n    },\n    {\n        question: \"Explain the concept of microservices architecture.\",\n        category: \"Architecture\",\n        difficulty: \"hard\",\n        keywords: [\n            \"microservices\",\n            \"monolith\",\n            \"distributed\",\n            \"scalability\",\n            \"independence\",\n            \"communication\",\n            \"deployment\"\n        ],\n        sampleAnswer: \"Microservices break applications into small, independent services that communicate over networks, enabling better scalability and maintainability.\",\n        companies: [\n            \"Netflix\",\n            \"Amazon\",\n            \"Uber\"\n        ]\n    },\n    {\n        question: \"What is Docker and how does it work?\",\n        category: \"DevOps\",\n        difficulty: \"medium\",\n        keywords: [\n            \"containerization\",\n            \"docker\",\n            \"images\",\n            \"containers\",\n            \"isolation\",\n            \"portability\",\n            \"virtualization\"\n        ],\n        sampleAnswer: \"Docker is a containerization platform that packages applications with their dependencies into lightweight, portable containers.\",\n        companies: [\n            \"Docker\",\n            \"Google\",\n            \"Amazon\"\n        ]\n    },\n    {\n        question: \"Explain the concept of version control and Git.\",\n        category: \"Tools\",\n        difficulty: \"easy\",\n        keywords: [\n            \"version control\",\n            \"git\",\n            \"repository\",\n            \"commit\",\n            \"branch\",\n            \"merge\",\n            \"collaboration\",\n            \"history\"\n        ],\n        sampleAnswer: \"Version control tracks changes to code over time. Git is a distributed version control system that enables collaboration and maintains project history.\",\n        companies: [\n            \"GitHub\",\n            \"GitLab\",\n            \"Atlassian\"\n        ]\n    },\n    {\n        question: \"What is the difference between synchronous and asynchronous programming?\",\n        category: \"Programming Concepts\",\n        difficulty: \"medium\",\n        keywords: [\n            \"synchronous\",\n            \"asynchronous\",\n            \"blocking\",\n            \"non-blocking\",\n            \"promises\",\n            \"async/await\",\n            \"callbacks\"\n        ],\n        sampleAnswer: \"Synchronous code executes sequentially and blocks until completion. Asynchronous code allows other operations to continue while waiting for results.\",\n        companies: [\n            \"Node.js\",\n            \"Google\",\n            \"Microsoft\"\n        ]\n    },\n    {\n        question: \"Explain the concept of Object-Oriented Programming.\",\n        category: \"Programming Concepts\",\n        difficulty: \"medium\",\n        keywords: [\n            \"OOP\",\n            \"encapsulation\",\n            \"inheritance\",\n            \"polymorphism\",\n            \"abstraction\",\n            \"classes\",\n            \"objects\"\n        ],\n        sampleAnswer: \"OOP organizes code into objects with properties and methods, using principles like encapsulation, inheritance, polymorphism, and abstraction.\",\n        companies: [\n            \"Oracle\",\n            \"Microsoft\",\n            \"IBM\"\n        ]\n    }\n];\nconst hrQuestions = [\n    {\n        question: \"Tell me about yourself.\",\n        category: \"Introduction\",\n        difficulty: \"easy\",\n        keywords: [\n            \"background\",\n            \"experience\",\n            \"skills\",\n            \"achievements\",\n            \"career goals\",\n            \"relevant\",\n            \"concise\"\n        ],\n        sampleAnswer: \"A brief professional summary highlighting relevant experience, key skills, and career objectives aligned with the role.\",\n        companies: [\n            \"All Companies\"\n        ]\n    },\n    {\n        question: \"Why do you want to work for our company?\",\n        category: \"Company Interest\",\n        difficulty: \"medium\",\n        keywords: [\n            \"research\",\n            \"company values\",\n            \"mission\",\n            \"culture\",\n            \"growth\",\n            \"opportunity\",\n            \"alignment\"\n        ],\n        sampleAnswer: \"Show research about the company, align personal values with company mission, and express genuine interest in contributing to their goals.\",\n        companies: [\n            \"All Companies\"\n        ]\n    },\n    {\n        question: \"What are your greatest strengths?\",\n        category: \"Self Assessment\",\n        difficulty: \"easy\",\n        keywords: [\n            \"relevant strengths\",\n            \"examples\",\n            \"impact\",\n            \"skills\",\n            \"achievements\",\n            \"specific\",\n            \"measurable\"\n        ],\n        sampleAnswer: \"Identify 2-3 relevant strengths with specific examples and quantifiable impact on previous roles or projects.\",\n        companies: [\n            \"All Companies\"\n        ]\n    },\n    {\n        question: \"What is your biggest weakness?\",\n        category: \"Self Assessment\",\n        difficulty: \"medium\",\n        keywords: [\n            \"genuine weakness\",\n            \"improvement\",\n            \"learning\",\n            \"growth\",\n            \"self-awareness\",\n            \"action plan\"\n        ],\n        sampleAnswer: \"Share a real weakness you're actively working to improve, with specific steps you're taking for development.\",\n        companies: [\n            \"All Companies\"\n        ]\n    },\n    {\n        question: \"Where do you see yourself in 5 years?\",\n        category: \"Career Goals\",\n        difficulty: \"medium\",\n        keywords: [\n            \"career progression\",\n            \"growth\",\n            \"learning\",\n            \"leadership\",\n            \"expertise\",\n            \"realistic\",\n            \"aligned\"\n        ],\n        sampleAnswer: \"Outline realistic career progression that shows ambition while aligning with the company's growth opportunities.\",\n        companies: [\n            \"All Companies\"\n        ]\n    },\n    {\n        question: \"Why are you leaving your current job?\",\n        category: \"Career Transition\",\n        difficulty: \"medium\",\n        keywords: [\n            \"positive reasons\",\n            \"growth\",\n            \"opportunity\",\n            \"learning\",\n            \"challenge\",\n            \"career advancement\"\n        ],\n        sampleAnswer: \"Focus on positive reasons like seeking growth, new challenges, or better alignment with career goals. Avoid negative comments.\",\n        companies: [\n            \"All Companies\"\n        ]\n    },\n    {\n        question: \"Describe a challenging situation you faced at work and how you handled it.\",\n        category: \"Problem Solving\",\n        difficulty: \"hard\",\n        keywords: [\n            \"STAR method\",\n            \"situation\",\n            \"task\",\n            \"action\",\n            \"result\",\n            \"problem solving\",\n            \"leadership\"\n        ],\n        sampleAnswer: \"Use STAR method to describe a specific challenging situation, your actions, and the positive outcome achieved.\",\n        companies: [\n            \"All Companies\"\n        ]\n    },\n    {\n        question: \"How do you handle stress and pressure?\",\n        category: \"Work Style\",\n        difficulty: \"medium\",\n        keywords: [\n            \"stress management\",\n            \"prioritization\",\n            \"time management\",\n            \"calm\",\n            \"productive\",\n            \"strategies\"\n        ],\n        sampleAnswer: \"Describe specific stress management techniques, prioritization methods, and how you maintain productivity under pressure.\",\n        companies: [\n            \"All Companies\"\n        ]\n    },\n    {\n        question: \"Describe your ideal work environment.\",\n        category: \"Work Style\",\n        difficulty: \"easy\",\n        keywords: [\n            \"collaboration\",\n            \"communication\",\n            \"learning\",\n            \"growth\",\n            \"team work\",\n            \"flexibility\",\n            \"culture\"\n        ],\n        sampleAnswer: \"Describe an environment that matches the company culture while highlighting your adaptability and team collaboration skills.\",\n        companies: [\n            \"All Companies\"\n        ]\n    },\n    {\n        question: \"How do you prioritize your work when you have multiple deadlines?\",\n        category: \"Time Management\",\n        difficulty: \"medium\",\n        keywords: [\n            \"prioritization\",\n            \"time management\",\n            \"deadlines\",\n            \"organization\",\n            \"efficiency\",\n            \"communication\"\n        ],\n        sampleAnswer: \"Explain your prioritization framework, time management tools, and communication strategies for managing multiple deadlines.\",\n        companies: [\n            \"All Companies\"\n        ]\n    },\n    {\n        question: \"Tell me about a time you had to work with a difficult team member.\",\n        category: \"Teamwork\",\n        difficulty: \"hard\",\n        keywords: [\n            \"teamwork\",\n            \"conflict resolution\",\n            \"communication\",\n            \"empathy\",\n            \"collaboration\",\n            \"positive outcome\"\n        ],\n        sampleAnswer: \"Use STAR method to show how you handled interpersonal challenges professionally and achieved positive team outcomes.\",\n        companies: [\n            \"All Companies\"\n        ]\n    },\n    {\n        question: \"What motivates you in your work?\",\n        category: \"Motivation\",\n        difficulty: \"easy\",\n        keywords: [\n            \"intrinsic motivation\",\n            \"learning\",\n            \"impact\",\n            \"growth\",\n            \"achievement\",\n            \"purpose\",\n            \"contribution\"\n        ],\n        sampleAnswer: \"Share genuine motivators that align with the role, such as learning, making impact, solving problems, or helping others.\",\n        companies: [\n            \"All Companies\"\n        ]\n    },\n    {\n        question: \"How do you stay updated with industry trends?\",\n        category: \"Learning\",\n        difficulty: \"medium\",\n        keywords: [\n            \"continuous learning\",\n            \"industry knowledge\",\n            \"resources\",\n            \"networking\",\n            \"courses\",\n            \"reading\"\n        ],\n        sampleAnswer: \"Describe specific resources, communities, courses, or practices you use to stay current with industry developments.\",\n        companies: [\n            \"All Companies\"\n        ]\n    },\n    {\n        question: \"Describe a time when you had to learn something new quickly.\",\n        category: \"Adaptability\",\n        difficulty: \"medium\",\n        keywords: [\n            \"learning agility\",\n            \"adaptability\",\n            \"quick learning\",\n            \"resourcefulness\",\n            \"application\",\n            \"results\"\n        ],\n        sampleAnswer: \"Share a specific example showing your learning process, resources used, and successful application of new knowledge.\",\n        companies: [\n            \"All Companies\"\n        ]\n    },\n    {\n        question: \"What questions do you have for us?\",\n        category: \"Engagement\",\n        difficulty: \"easy\",\n        keywords: [\n            \"thoughtful questions\",\n            \"company culture\",\n            \"role expectations\",\n            \"growth opportunities\",\n            \"team dynamics\"\n        ],\n        sampleAnswer: \"Ask thoughtful questions about the role, team, company culture, growth opportunities, and success metrics.\",\n        companies: [\n            \"All Companies\"\n        ]\n    }\n];\nconst getRandomQuestions = (type, count = 15)=>{\n    const questions = type === 'technical' ? technicalQuestions : hrQuestions;\n    const shuffled = [\n        ...questions\n    ].sort(()=>0.5 - Math.random());\n    return shuffled.slice(0, Math.min(count, questions.length));\n};\n// Generate questions based on resume analysis\nconst generateResumeBasedQuestions = (resumeAnalysis, count = 8)=>{\n    const { skills, technologies, experience, keywords } = resumeAnalysis;\n    const questions = [];\n    // Generate custom questions based on specific skills found in resume\n    const customQuestions = generateCustomQuestions(skills, technologies, experience);\n    // Prioritize custom questions (60% of total)\n    const customCount = Math.ceil(count * 0.6);\n    questions.push(...customQuestions.slice(0, customCount));\n    // Find relevant predefined questions based on resume skills\n    const relevantQuestions = technicalQuestions.filter((q)=>skills.some((skill)=>q.category.toLowerCase().includes(skill.toLowerCase()) || q.keywords.some((keyword)=>keyword.toLowerCase().includes(skill.toLowerCase())) || q.question.toLowerCase().includes(skill.toLowerCase())) || technologies.some((tech)=>q.category.toLowerCase().includes(tech.toLowerCase()) || q.keywords.some((keyword)=>keyword.toLowerCase().includes(tech.toLowerCase())) || q.question.toLowerCase().includes(tech.toLowerCase())));\n    // Add relevant predefined questions (40% of total)\n    const remainingCount = count - questions.length;\n    if (remainingCount > 0 && relevantQuestions.length > 0) {\n        questions.push(...relevantQuestions.slice(0, remainingCount));\n    }\n    // If still not enough questions, generate more custom ones\n    if (questions.length < count) {\n        const additionalCustom = generateExperienceBasedQuestions(experience, skills);\n        questions.push(...additionalCustom.slice(0, count - questions.length));\n    }\n    // Ensure we have enough questions\n    if (questions.length < count) {\n        const fallbackQuestions = technicalQuestions.filter((q)=>!questions.includes(q));\n        questions.push(...fallbackQuestions.slice(0, count - questions.length));\n    }\n    // Shuffle and return\n    return questions.sort(()=>0.5 - Math.random()).slice(0, count);\n};\n// Generate custom questions based on specific skills and technologies\nconst generateCustomQuestions = (skills, technologies, experience)=>{\n    const customQuestions = [];\n    // JavaScript/TypeScript specific questions\n    if (skills.some((s)=>s.toLowerCase().includes('javascript') || s.toLowerCase().includes('typescript'))) {\n        customQuestions.push({\n            question: \"Based on your JavaScript experience, explain how closures work and provide a practical example.\",\n            category: \"JavaScript\",\n            difficulty: \"medium\",\n            keywords: [\n                \"closures\",\n                \"scope\",\n                \"lexical scope\",\n                \"inner function\",\n                \"practical example\"\n            ],\n            sampleAnswer: \"Closures allow inner functions to access outer function variables even after the outer function returns.\",\n            companies: [\n                \"Google\",\n                \"Meta\",\n                \"Microsoft\"\n            ]\n        }, {\n            question: \"How do you handle asynchronous operations in JavaScript? Compare callbacks, promises, and async/await.\",\n            category: \"JavaScript\",\n            difficulty: \"medium\",\n            keywords: [\n                \"asynchronous\",\n                \"callbacks\",\n                \"promises\",\n                \"async/await\",\n                \"event loop\"\n            ],\n            sampleAnswer: \"Callbacks can lead to callback hell, promises provide better chaining, async/await offers cleaner syntax.\",\n            companies: [\n                \"Netflix\",\n                \"Uber\",\n                \"Airbnb\"\n            ]\n        });\n    }\n    // React specific questions\n    if (skills.some((s)=>s.toLowerCase().includes('react'))) {\n        customQuestions.push({\n            question: \"In your React projects, how do you manage state? Compare useState, useReducer, and Context API.\",\n            category: \"React\",\n            difficulty: \"medium\",\n            keywords: [\n                \"state management\",\n                \"useState\",\n                \"useReducer\",\n                \"Context API\",\n                \"props drilling\"\n            ],\n            sampleAnswer: \"useState for simple state, useReducer for complex state logic, Context API to avoid props drilling.\",\n            companies: [\n                \"Meta\",\n                \"Netflix\",\n                \"Spotify\"\n            ]\n        }, {\n            question: \"How do you optimize React component performance? Discuss memoization and re-rendering.\",\n            category: \"React\",\n            difficulty: \"hard\",\n            keywords: [\n                \"performance\",\n                \"memoization\",\n                \"React.memo\",\n                \"useMemo\",\n                \"useCallback\",\n                \"re-rendering\"\n            ],\n            sampleAnswer: \"Use React.memo, useMemo, useCallback to prevent unnecessary re-renders and expensive calculations.\",\n            companies: [\n                \"Meta\",\n                \"Google\",\n                \"Microsoft\"\n            ]\n        });\n    }\n    // Node.js specific questions\n    if (skills.some((s)=>s.toLowerCase().includes('node'))) {\n        customQuestions.push({\n            question: \"Describe your experience with Node.js. How do you handle errors in asynchronous operations?\",\n            category: \"Node.js\",\n            difficulty: \"medium\",\n            keywords: [\n                \"error handling\",\n                \"try-catch\",\n                \"promises\",\n                \"async/await\",\n                \"error-first callbacks\"\n            ],\n            sampleAnswer: \"Use try-catch with async/await, .catch() with promises, and error-first callbacks for traditional Node.js patterns.\",\n            companies: [\n                \"Netflix\",\n                \"Uber\",\n                \"LinkedIn\"\n            ]\n        });\n    }\n    // Python specific questions\n    if (skills.some((s)=>s.toLowerCase().includes('python'))) {\n        customQuestions.push({\n            question: \"What Python frameworks have you worked with? Compare their use cases and advantages.\",\n            category: \"Python\",\n            difficulty: \"medium\",\n            keywords: [\n                \"frameworks\",\n                \"Django\",\n                \"Flask\",\n                \"FastAPI\",\n                \"use cases\",\n                \"advantages\"\n            ],\n            sampleAnswer: \"Django for full-featured web apps, Flask for lightweight APIs, FastAPI for modern async APIs with automatic documentation.\",\n            companies: [\n                \"Google\",\n                \"Instagram\",\n                \"Dropbox\"\n            ]\n        });\n    }\n    // Database questions based on technologies\n    if (technologies.some((t)=>[\n            'mongodb',\n            'mysql',\n            'postgresql',\n            'redis'\n        ].some((db)=>t.toLowerCase().includes(db)))) {\n        const dbTechs = technologies.filter((t)=>[\n                'mongodb',\n                'mysql',\n                'postgresql',\n                'redis'\n            ].some((db)=>t.toLowerCase().includes(db)));\n        customQuestions.push({\n            question: `You've worked with ${dbTechs.join(', ')}. How do you choose between SQL and NoSQL databases for a project?`,\n            category: \"Database\",\n            difficulty: \"medium\",\n            keywords: [\n                \"SQL\",\n                \"NoSQL\",\n                \"database selection\",\n                \"use cases\",\n                \"scalability\",\n                \"consistency\"\n            ],\n            sampleAnswer: \"Choose SQL for complex relationships and ACID compliance, NoSQL for scalability and flexible schemas.\",\n            companies: [\n                \"Amazon\",\n                \"Google\",\n                \"MongoDB\"\n            ]\n        });\n    }\n    // AWS/Cloud questions\n    if (technologies.some((t)=>[\n            'aws',\n            'azure',\n            'gcp',\n            'docker',\n            'kubernetes'\n        ].some((cloud)=>t.toLowerCase().includes(cloud)))) {\n        const cloudTechs = technologies.filter((t)=>[\n                'aws',\n                'azure',\n                'gcp',\n                'docker',\n                'kubernetes'\n            ].some((cloud)=>t.toLowerCase().includes(cloud)));\n        customQuestions.push({\n            question: `Describe your experience with ${cloudTechs.join(', ')}. How do you ensure application scalability in the cloud?`,\n            category: \"Cloud & DevOps\",\n            difficulty: \"hard\",\n            keywords: [\n                \"cloud\",\n                \"scalability\",\n                \"load balancing\",\n                \"auto scaling\",\n                \"containerization\"\n            ],\n            sampleAnswer: \"Use load balancers, auto scaling groups, containerization, and microservices for horizontal scalability.\",\n            companies: [\n                \"Amazon\",\n                \"Microsoft\",\n                \"Google\"\n            ]\n        });\n    }\n    return customQuestions;\n};\n// Generate experience-based questions\nconst generateExperienceBasedQuestions = (experience, skills)=>{\n    const questions = [];\n    // Frontend experience questions\n    if (experience.some((exp)=>exp.toLowerCase().includes('frontend'))) {\n        questions.push({\n            question: \"Tell me about a challenging frontend project you've worked on. What technologies did you use and what problems did you solve?\",\n            category: \"Frontend Experience\",\n            difficulty: \"medium\",\n            keywords: [\n                \"project experience\",\n                \"challenges\",\n                \"problem solving\",\n                \"technologies\"\n            ],\n            sampleAnswer: \"Describe a specific project, technologies used, challenges faced, and solutions implemented.\",\n            companies: [\n                \"All Companies\"\n            ]\n        });\n    }\n    // Backend experience questions\n    if (experience.some((exp)=>exp.toLowerCase().includes('backend'))) {\n        questions.push({\n            question: \"Describe a backend system you've designed. How did you handle scalability and performance?\",\n            category: \"Backend Experience\",\n            difficulty: \"hard\",\n            keywords: [\n                \"system design\",\n                \"scalability\",\n                \"performance\",\n                \"architecture\"\n            ],\n            sampleAnswer: \"Explain system architecture, scalability strategies, performance optimizations, and trade-offs made.\",\n            companies: [\n                \"All Companies\"\n            ]\n        });\n    }\n    // Years of experience questions\n    const experienceYears = experience.find((exp)=>exp.includes('years'));\n    if (experienceYears) {\n        questions.push({\n            question: `With your ${experienceYears} in software development, what's the most important lesson you've learned?`,\n            category: \"Professional Growth\",\n            difficulty: \"easy\",\n            keywords: [\n                \"experience\",\n                \"lessons learned\",\n                \"professional growth\",\n                \"best practices\"\n            ],\n            sampleAnswer: \"Share a meaningful lesson about code quality, teamwork, problem-solving, or technical decision-making.\",\n            companies: [\n                \"All Companies\"\n            ]\n        });\n    }\n    return questions;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/interview-questions.ts\n");

/***/ }),

/***/ "(rsc)/./lib/models/Interview.ts":
/*!*********************************!*\
  !*** ./lib/models/Interview.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InterviewQuestion: () => (/* binding */ InterviewQuestion),\n/* harmony export */   InterviewSession: () => (/* binding */ InterviewSession)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst InterviewQuestionSchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    question: {\n        type: String,\n        required: true\n    },\n    type: {\n        type: String,\n        enum: [\n            'technical',\n            'hr'\n        ],\n        required: true\n    },\n    category: {\n        type: String,\n        required: true // e.g., 'JavaScript', 'React', 'Leadership', 'Communication'\n    },\n    difficulty: {\n        type: String,\n        enum: [\n            'easy',\n            'medium',\n            'hard'\n        ],\n        default: 'medium'\n    },\n    keywords: [\n        {\n            type: String\n        }\n    ],\n    sampleAnswer: {\n        type: String\n    },\n    companies: [\n        {\n            type: String\n        }\n    ] // Companies that frequently ask this question\n}, {\n    timestamps: true\n});\nconst InterviewSessionSchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    userId: {\n        type: String,\n        required: true\n    },\n    type: {\n        type: String,\n        enum: [\n            'technical',\n            'hr',\n            'resume-based'\n        ],\n        required: true\n    },\n    resumeAnalysis: {\n        skills: [\n            String\n        ],\n        technologies: [\n            String\n        ],\n        experience: [\n            String\n        ],\n        keywords: [\n            String\n        ],\n        rawText: String\n    },\n    status: {\n        type: String,\n        enum: [\n            'in-progress',\n            'completed',\n            'abandoned'\n        ],\n        default: 'in-progress'\n    },\n    startTime: {\n        type: Date,\n        default: Date.now\n    },\n    endTime: {\n        type: Date\n    },\n    totalDuration: {\n        type: Number // in seconds\n    },\n    questions: [\n        {\n            questionId: {\n                type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n                ref: 'InterviewQuestion'\n            },\n            question: String,\n            answer: String,\n            timeSpent: Number,\n            score: Number,\n            feedback: String,\n            category: String,\n            difficulty: String,\n            keywords: [\n                String\n            ]\n        }\n    ],\n    overallScore: {\n        type: Number,\n        min: 0,\n        max: 100\n    },\n    strengths: [\n        {\n            category: String,\n            score: Number,\n            feedback: String\n        }\n    ],\n    improvements: [\n        {\n            category: String,\n            score: Number,\n            feedback: String,\n            suggestions: [\n                String\n            ]\n        }\n    ],\n    feedback: {\n        overall: String,\n        technical: String,\n        communication: String,\n        confidence: String\n    }\n}, {\n    timestamps: true\n});\nconst InterviewQuestion = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).InterviewQuestion || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('InterviewQuestion', InterviewQuestionSchema);\nconst InterviewSession = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).InterviewSession || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('InterviewSession', InterviewSessionSchema);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvbW9kZWxzL0ludGVydmlldy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQStCO0FBRS9CLE1BQU1DLDBCQUEwQixJQUFJRCx3REFBZSxDQUFDO0lBQ2xERyxVQUFVO1FBQ1JDLE1BQU1DO1FBQ05DLFVBQVU7SUFDWjtJQUNBRixNQUFNO1FBQ0pBLE1BQU1DO1FBQ05FLE1BQU07WUFBQztZQUFhO1NBQUs7UUFDekJELFVBQVU7SUFDWjtJQUNBRSxVQUFVO1FBQ1JKLE1BQU1DO1FBQ05DLFVBQVUsS0FBSyw2REFBNkQ7SUFDOUU7SUFDQUcsWUFBWTtRQUNWTCxNQUFNQztRQUNORSxNQUFNO1lBQUM7WUFBUTtZQUFVO1NBQU87UUFDaENHLFNBQVM7SUFDWDtJQUNBQyxVQUFVO1FBQUM7WUFDVFAsTUFBTUM7UUFDUjtLQUFFO0lBQ0ZPLGNBQWM7UUFDWlIsTUFBTUM7SUFDUjtJQUNBUSxXQUFXO1FBQUM7WUFDVlQsTUFBTUM7UUFDUjtLQUFFLENBQUMsOENBQThDO0FBQ25ELEdBQUc7SUFDRFMsWUFBWTtBQUNkO0FBRUEsTUFBTUMseUJBQXlCLElBQUlmLHdEQUFlLENBQUM7SUFDakRnQixRQUFRO1FBQ05aLE1BQU1DO1FBQ05DLFVBQVU7SUFDWjtJQUNBRixNQUFNO1FBQ0pBLE1BQU1DO1FBQ05FLE1BQU07WUFBQztZQUFhO1lBQU07U0FBZTtRQUN6Q0QsVUFBVTtJQUNaO0lBQ0FXLGdCQUFnQjtRQUNkQyxRQUFRO1lBQUNiO1NBQU87UUFDaEJjLGNBQWM7WUFBQ2Q7U0FBTztRQUN0QmUsWUFBWTtZQUFDZjtTQUFPO1FBQ3BCTSxVQUFVO1lBQUNOO1NBQU87UUFDbEJnQixTQUFTaEI7SUFDWDtJQUNBaUIsUUFBUTtRQUNObEIsTUFBTUM7UUFDTkUsTUFBTTtZQUFDO1lBQWU7WUFBYTtTQUFZO1FBQy9DRyxTQUFTO0lBQ1g7SUFDQWEsV0FBVztRQUNUbkIsTUFBTW9CO1FBQ05kLFNBQVNjLEtBQUtDLEdBQUc7SUFDbkI7SUFDQUMsU0FBUztRQUNQdEIsTUFBTW9CO0lBQ1I7SUFDQUcsZUFBZTtRQUNidkIsTUFBTXdCLE9BQU8sYUFBYTtJQUM1QjtJQUNBQyxXQUFXO1FBQUM7WUFDVkMsWUFBWTtnQkFDVjFCLE1BQU1KLHdEQUFlLENBQUMrQixLQUFLLENBQUNDLFFBQVE7Z0JBQ3BDQyxLQUFLO1lBQ1A7WUFDQTlCLFVBQVVFO1lBQ1Y2QixRQUFRN0I7WUFDUjhCLFdBQVdQO1lBQ1hRLE9BQU9SO1lBQ1BTLFVBQVVoQztZQUNWRyxVQUFVSDtZQUNWSSxZQUFZSjtZQUNaTSxVQUFVO2dCQUFDTjthQUFPO1FBQ3BCO0tBQUU7SUFDRmlDLGNBQWM7UUFDWmxDLE1BQU13QjtRQUNOVyxLQUFLO1FBQ0xDLEtBQUs7SUFDUDtJQUNBQyxXQUFXO1FBQUM7WUFDVmpDLFVBQVVIO1lBQ1YrQixPQUFPUjtZQUNQUyxVQUFVaEM7UUFDWjtLQUFFO0lBQ0ZxQyxjQUFjO1FBQUM7WUFDYmxDLFVBQVVIO1lBQ1YrQixPQUFPUjtZQUNQUyxVQUFVaEM7WUFDVnNDLGFBQWE7Z0JBQUN0QzthQUFPO1FBQ3ZCO0tBQUU7SUFDRmdDLFVBQVU7UUFDUk8sU0FBU3ZDO1FBQ1R3QyxXQUFXeEM7UUFDWHlDLGVBQWV6QztRQUNmMEMsWUFBWTFDO0lBQ2Q7QUFDRixHQUFHO0lBQ0RTLFlBQVk7QUFDZDtBQUVPLE1BQU1rQyxvQkFBb0JoRCx3REFBZSxDQUFDZ0QsaUJBQWlCLElBQUloRCxxREFBYyxDQUFDLHFCQUFxQkMseUJBQXdCO0FBQzNILE1BQU1rRCxtQkFBbUJuRCx3REFBZSxDQUFDbUQsZ0JBQWdCLElBQUluRCxxREFBYyxDQUFDLG9CQUFvQmUsd0JBQXVCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFha2FzXFxEb3dubG9hZHNcXE9wZW5QcmVwXFxsaWJcXG1vZGVsc1xcSW50ZXJ2aWV3LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSdcclxuXHJcbmNvbnN0IEludGVydmlld1F1ZXN0aW9uU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XHJcbiAgcXVlc3Rpb246IHtcclxuICAgIHR5cGU6IFN0cmluZyxcclxuICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgfSxcclxuICB0eXBlOiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICBlbnVtOiBbJ3RlY2huaWNhbCcsICdociddLFxyXG4gICAgcmVxdWlyZWQ6IHRydWVcclxuICB9LFxyXG4gIGNhdGVnb3J5OiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICByZXF1aXJlZDogdHJ1ZSAvLyBlLmcuLCAnSmF2YVNjcmlwdCcsICdSZWFjdCcsICdMZWFkZXJzaGlwJywgJ0NvbW11bmljYXRpb24nXHJcbiAgfSxcclxuICBkaWZmaWN1bHR5OiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICBlbnVtOiBbJ2Vhc3knLCAnbWVkaXVtJywgJ2hhcmQnXSxcclxuICAgIGRlZmF1bHQ6ICdtZWRpdW0nXHJcbiAgfSxcclxuICBrZXl3b3JkczogW3tcclxuICAgIHR5cGU6IFN0cmluZ1xyXG4gIH1dLCAvLyBFeHBlY3RlZCBrZXl3b3JkcyBpbiBnb29kIGFuc3dlcnNcclxuICBzYW1wbGVBbnN3ZXI6IHtcclxuICAgIHR5cGU6IFN0cmluZ1xyXG4gIH0sXHJcbiAgY29tcGFuaWVzOiBbe1xyXG4gICAgdHlwZTogU3RyaW5nXHJcbiAgfV0gLy8gQ29tcGFuaWVzIHRoYXQgZnJlcXVlbnRseSBhc2sgdGhpcyBxdWVzdGlvblxyXG59LCB7XHJcbiAgdGltZXN0YW1wczogdHJ1ZVxyXG59KVxyXG5cclxuY29uc3QgSW50ZXJ2aWV3U2Vzc2lvblNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xyXG4gIHVzZXJJZDoge1xyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgcmVxdWlyZWQ6IHRydWVcclxuICB9LFxyXG4gIHR5cGU6IHtcclxuICAgIHR5cGU6IFN0cmluZyxcclxuICAgIGVudW06IFsndGVjaG5pY2FsJywgJ2hyJywgJ3Jlc3VtZS1iYXNlZCddLFxyXG4gICAgcmVxdWlyZWQ6IHRydWVcclxuICB9LFxyXG4gIHJlc3VtZUFuYWx5c2lzOiB7XHJcbiAgICBza2lsbHM6IFtTdHJpbmddLFxyXG4gICAgdGVjaG5vbG9naWVzOiBbU3RyaW5nXSxcclxuICAgIGV4cGVyaWVuY2U6IFtTdHJpbmddLFxyXG4gICAga2V5d29yZHM6IFtTdHJpbmddLFxyXG4gICAgcmF3VGV4dDogU3RyaW5nXHJcbiAgfSxcclxuICBzdGF0dXM6IHtcclxuICAgIHR5cGU6IFN0cmluZyxcclxuICAgIGVudW06IFsnaW4tcHJvZ3Jlc3MnLCAnY29tcGxldGVkJywgJ2FiYW5kb25lZCddLFxyXG4gICAgZGVmYXVsdDogJ2luLXByb2dyZXNzJ1xyXG4gIH0sXHJcbiAgc3RhcnRUaW1lOiB7XHJcbiAgICB0eXBlOiBEYXRlLFxyXG4gICAgZGVmYXVsdDogRGF0ZS5ub3dcclxuICB9LFxyXG4gIGVuZFRpbWU6IHtcclxuICAgIHR5cGU6IERhdGVcclxuICB9LFxyXG4gIHRvdGFsRHVyYXRpb246IHtcclxuICAgIHR5cGU6IE51bWJlciAvLyBpbiBzZWNvbmRzXHJcbiAgfSxcclxuICBxdWVzdGlvbnM6IFt7XHJcbiAgICBxdWVzdGlvbklkOiB7XHJcbiAgICAgIHR5cGU6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuICAgICAgcmVmOiAnSW50ZXJ2aWV3UXVlc3Rpb24nXHJcbiAgICB9LFxyXG4gICAgcXVlc3Rpb246IFN0cmluZyxcclxuICAgIGFuc3dlcjogU3RyaW5nLFxyXG4gICAgdGltZVNwZW50OiBOdW1iZXIsIC8vIHNlY29uZHMgc3BlbnQgb24gdGhpcyBxdWVzdGlvblxyXG4gICAgc2NvcmU6IE51bWJlciwgLy8gMC0xMCBzY29yZSBiYXNlZCBvbiBrZXl3b3JkcyBhbmQgcXVhbGl0eVxyXG4gICAgZmVlZGJhY2s6IFN0cmluZyxcclxuICAgIGNhdGVnb3J5OiBTdHJpbmcsXHJcbiAgICBkaWZmaWN1bHR5OiBTdHJpbmcsXHJcbiAgICBrZXl3b3JkczogW1N0cmluZ11cclxuICB9XSxcclxuICBvdmVyYWxsU2NvcmU6IHtcclxuICAgIHR5cGU6IE51bWJlcixcclxuICAgIG1pbjogMCxcclxuICAgIG1heDogMTAwXHJcbiAgfSxcclxuICBzdHJlbmd0aHM6IFt7XHJcbiAgICBjYXRlZ29yeTogU3RyaW5nLFxyXG4gICAgc2NvcmU6IE51bWJlcixcclxuICAgIGZlZWRiYWNrOiBTdHJpbmdcclxuICB9XSxcclxuICBpbXByb3ZlbWVudHM6IFt7XHJcbiAgICBjYXRlZ29yeTogU3RyaW5nLFxyXG4gICAgc2NvcmU6IE51bWJlcixcclxuICAgIGZlZWRiYWNrOiBTdHJpbmcsXHJcbiAgICBzdWdnZXN0aW9uczogW1N0cmluZ11cclxuICB9XSxcclxuICBmZWVkYmFjazoge1xyXG4gICAgb3ZlcmFsbDogU3RyaW5nLFxyXG4gICAgdGVjaG5pY2FsOiBTdHJpbmcsXHJcbiAgICBjb21tdW5pY2F0aW9uOiBTdHJpbmcsXHJcbiAgICBjb25maWRlbmNlOiBTdHJpbmdcclxuICB9XHJcbn0sIHtcclxuICB0aW1lc3RhbXBzOiB0cnVlXHJcbn0pXHJcblxyXG5leHBvcnQgY29uc3QgSW50ZXJ2aWV3UXVlc3Rpb24gPSBtb25nb29zZS5tb2RlbHMuSW50ZXJ2aWV3UXVlc3Rpb24gfHwgbW9uZ29vc2UubW9kZWwoJ0ludGVydmlld1F1ZXN0aW9uJywgSW50ZXJ2aWV3UXVlc3Rpb25TY2hlbWEpXHJcbmV4cG9ydCBjb25zdCBJbnRlcnZpZXdTZXNzaW9uID0gbW9uZ29vc2UubW9kZWxzLkludGVydmlld1Nlc3Npb24gfHwgbW9uZ29vc2UubW9kZWwoJ0ludGVydmlld1Nlc3Npb24nLCBJbnRlcnZpZXdTZXNzaW9uU2NoZW1hKSJdLCJuYW1lcyI6WyJtb25nb29zZSIsIkludGVydmlld1F1ZXN0aW9uU2NoZW1hIiwiU2NoZW1hIiwicXVlc3Rpb24iLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJlbnVtIiwiY2F0ZWdvcnkiLCJkaWZmaWN1bHR5IiwiZGVmYXVsdCIsImtleXdvcmRzIiwic2FtcGxlQW5zd2VyIiwiY29tcGFuaWVzIiwidGltZXN0YW1wcyIsIkludGVydmlld1Nlc3Npb25TY2hlbWEiLCJ1c2VySWQiLCJyZXN1bWVBbmFseXNpcyIsInNraWxscyIsInRlY2hub2xvZ2llcyIsImV4cGVyaWVuY2UiLCJyYXdUZXh0Iiwic3RhdHVzIiwic3RhcnRUaW1lIiwiRGF0ZSIsIm5vdyIsImVuZFRpbWUiLCJ0b3RhbER1cmF0aW9uIiwiTnVtYmVyIiwicXVlc3Rpb25zIiwicXVlc3Rpb25JZCIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJhbnN3ZXIiLCJ0aW1lU3BlbnQiLCJzY29yZSIsImZlZWRiYWNrIiwib3ZlcmFsbFNjb3JlIiwibWluIiwibWF4Iiwic3RyZW5ndGhzIiwiaW1wcm92ZW1lbnRzIiwic3VnZ2VzdGlvbnMiLCJvdmVyYWxsIiwidGVjaG5pY2FsIiwiY29tbXVuaWNhdGlvbiIsImNvbmZpZGVuY2UiLCJJbnRlcnZpZXdRdWVzdGlvbiIsIm1vZGVscyIsIm1vZGVsIiwiSW50ZXJ2aWV3U2Vzc2lvbiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/models/Interview.ts\n");

/***/ }),

/***/ "(rsc)/./lib/models/User.ts":
/*!****************************!*\
  !*** ./lib/models/User.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst UserSchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    id: {\n        type: String,\n        required: true,\n        unique: true\n    },\n    email: {\n        type: String,\n        required: true,\n        unique: true,\n        lowercase: true,\n        trim: true\n    },\n    password: {\n        type: String,\n        required: false,\n        minlength: 6\n    },\n    name: {\n        type: String,\n        required: true,\n        trim: true\n    },\n    avatar: {\n        type: String,\n        default: null\n    },\n    image: {\n        type: String,\n        default: null\n    },\n    provider: {\n        type: String,\n        enum: [\n            'local',\n            'google'\n        ],\n        default: 'local'\n    },\n    googleId: {\n        type: String,\n        default: null\n    },\n    emailVerified: {\n        type: Boolean,\n        default: false\n    },\n    subscriptionTier: {\n        type: String,\n        enum: [\n            'free',\n            'pro',\n            'premium'\n        ],\n        default: 'free'\n    },\n    subscriptionStatus: {\n        type: String,\n        enum: [\n            'active',\n            'cancelled',\n            'expired'\n        ],\n        default: 'active'\n    },\n    subscriptionStartDate: {\n        type: Date,\n        default: Date.now\n    },\n    subscriptionEndDate: {\n        type: Date,\n        default: null\n    },\n    stripeCustomerId: {\n        type: String,\n        default: null\n    },\n    subscription: {\n        planId: {\n            type: String,\n            default: null\n        },\n        paymentId: {\n            type: String,\n            default: null\n        },\n        orderId: {\n            type: String,\n            default: null\n        },\n        startDate: {\n            type: Date,\n            default: null\n        },\n        endDate: {\n            type: Date,\n            default: null\n        }\n    },\n    profile: {\n        college: {\n            type: String,\n            trim: true\n        },\n        graduationYear: {\n            type: Number,\n            min: 2020,\n            max: 2030\n        },\n        targetCompanies: [\n            {\n                type: String,\n                trim: true\n            }\n        ],\n        preparationLevel: {\n            type: String,\n            enum: [\n                'beginner',\n                'intermediate',\n                'advanced'\n            ],\n            default: 'beginner'\n        },\n        focusAreas: [\n            {\n                type: String,\n                enum: [\n                    'aptitude',\n                    'coding',\n                    'technical',\n                    'hr'\n                ]\n            }\n        ]\n    },\n    usage: {\n        studyPlansGenerated: {\n            type: Number,\n            default: 0\n        },\n        companiesAccessed: [\n            {\n                type: String\n            }\n        ],\n        forumPostsCreated: {\n            type: Number,\n            default: 0\n        },\n        materialsAccessed: [\n            {\n                type: String\n            }\n        ],\n        totalPageViews: {\n            type: Number,\n            default: 0\n        },\n        questionsViewed: {\n            type: Number,\n            default: 0\n        },\n        answersPosted: {\n            type: Number,\n            default: 0\n        },\n        commentsPosted: {\n            type: Number,\n            default: 0\n        },\n        votesCast: {\n            type: Number,\n            default: 0\n        },\n        searchesPerformed: {\n            type: Number,\n            default: 0\n        },\n        lastActiveDate: {\n            type: Date,\n            default: Date.now\n        },\n        lastProfileUpdate: {\n            type: Date,\n            default: Date.now\n        },\n        dailyActivity: [\n            {\n                date: {\n                    type: String,\n                    required: true\n                },\n                actions: {\n                    type: Number,\n                    default: 0\n                }\n            }\n        ],\n        activityLog: [\n            {\n                action: {\n                    type: String,\n                    required: true\n                },\n                metadata: {\n                    type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.Mixed,\n                    default: {}\n                },\n                timestamp: {\n                    type: Date,\n                    default: Date.now\n                },\n                sessionId: {\n                    type: String,\n                    default: 'unknown'\n                }\n            }\n        ]\n    },\n    preferences: {\n        emailNotifications: {\n            type: Boolean,\n            default: true\n        },\n        studyReminders: {\n            type: Boolean,\n            default: true\n        },\n        weeklyProgress: {\n            type: Boolean,\n            default: true\n        }\n    }\n}, {\n    timestamps: true\n});\n// Indexes for performance (email and id already have unique indexes from schema)\nUserSchema.index({\n    subscriptionTier: 1,\n    subscriptionStatus: 1\n});\nUserSchema.index({\n    'usage.lastActiveDate': -1\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).User || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('User', UserSchema));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/models/User.ts\n");

/***/ }),

/***/ "(rsc)/./lib/mongodb.ts":
/*!************************!*\
  !*** ./lib/mongodb.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connectDB: () => (/* binding */ connectDB),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst MONGODB_URI = process.env.MONGODB_URI || 'mongodb+srv://aakashrajendran2004_db_user:rFMV7OBWSpxS5BFk@openprep.2jfzhki.mongodb.net/?retryWrites=true&w=majority&appName=OpenPrep';\nif (!MONGODB_URI) {\n    throw new Error('Please define the MONGODB_URI environment variable inside .env.local');\n}\nlet cached = global.mongoose;\nif (!cached) {\n    cached = global.mongoose = {\n        conn: null,\n        promise: null\n    };\n}\nasync function connectDB() {\n    // Check if connection is still alive\n    if (cached.conn && (mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection).readyState === 1) {\n        return cached.conn;\n    }\n    // Reset cached connection if it's not connected\n    if (cached.conn && (mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection).readyState !== 1) {\n        cached.conn = null;\n        cached.promise = null;\n    }\n    if (!cached.promise) {\n        const opts = {\n            bufferCommands: false,\n            maxPoolSize: 20,\n            minPoolSize: 5,\n            serverSelectionTimeoutMS: 30000,\n            socketTimeoutMS: 0,\n            connectTimeoutMS: 30000,\n            family: 4,\n            retryWrites: true,\n            maxIdleTimeMS: 300000,\n            heartbeatFrequencyMS: 10000,\n            autoIndex: false,\n            autoCreate: false\n        };\n        console.log('🔌 Connecting to MongoDB...');\n        cached.promise = mongoose__WEBPACK_IMPORTED_MODULE_0___default().connect(MONGODB_URI, opts).then((mongoose)=>{\n            console.log('✅ Successfully connected to MongoDB');\n            // Set up connection event listeners for better monitoring\n            mongoose.connection.on('connected', ()=>{\n                console.log('📡 MongoDB connection established');\n            });\n            mongoose.connection.on('error', (err)=>{\n                console.error('❌ MongoDB connection error:', err);\n            });\n            mongoose.connection.on('disconnected', ()=>{\n                console.log('🔌 MongoDB disconnected');\n                // Reset cache when disconnected\n                cached.conn = null;\n                cached.promise = null;\n            });\n            mongoose.connection.on('reconnected', ()=>{\n                console.log('🔄 MongoDB reconnected');\n            });\n            return mongoose;\n        }).catch((error)=>{\n            console.error('❌ MongoDB connection failed:', error);\n            cached.promise = null;\n            throw error;\n        });\n    }\n    try {\n        cached.conn = await cached.promise;\n    } catch (e) {\n        console.error('❌ MongoDB connection error:', e);\n        cached.promise = null;\n        // If connection fails, try to reconnect after a delay\n        setTimeout(()=>{\n            cached.promise = null;\n        }, 5000);\n        throw e;\n    }\n    return cached.conn;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (connectDB);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvbW9uZ29kYi50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQStCO0FBRS9CLE1BQU1DLGNBQWNDLFFBQVFDLEdBQUcsQ0FBQ0YsV0FBVyxJQUFJO0FBRS9DLElBQUksQ0FBQ0EsYUFBYTtJQUNoQixNQUFNLElBQUlHLE1BQU07QUFDbEI7QUFjQSxJQUFJQyxTQUFTQyxPQUFPTixRQUFRO0FBRTVCLElBQUksQ0FBQ0ssUUFBUTtJQUNYQSxTQUFTQyxPQUFPTixRQUFRLEdBQUc7UUFBRU8sTUFBTTtRQUFNQyxTQUFTO0lBQUs7QUFDekQ7QUFFQSxlQUFlQztJQUNiLHFDQUFxQztJQUNyQyxJQUFJSixPQUFPRSxJQUFJLElBQUlQLDREQUFtQixDQUFDVyxVQUFVLEtBQUssR0FBRztRQUN2RCxPQUFPTixPQUFPRSxJQUFJO0lBQ3BCO0lBRUEsZ0RBQWdEO0lBQ2hELElBQUlGLE9BQU9FLElBQUksSUFBSVAsNERBQW1CLENBQUNXLFVBQVUsS0FBSyxHQUFHO1FBQ3ZETixPQUFPRSxJQUFJLEdBQUc7UUFDZEYsT0FBT0csT0FBTyxHQUFHO0lBQ25CO0lBRUEsSUFBSSxDQUFDSCxPQUFPRyxPQUFPLEVBQUU7UUFDbkIsTUFBTUksT0FBTztZQUNYQyxnQkFBZ0I7WUFDaEJDLGFBQWE7WUFDYkMsYUFBYTtZQUNiQywwQkFBMEI7WUFDMUJDLGlCQUFpQjtZQUNqQkMsa0JBQWtCO1lBQ2xCQyxRQUFRO1lBQ1JDLGFBQWE7WUFDYkMsZUFBZTtZQUNmQyxzQkFBc0I7WUFDdEJDLFdBQVc7WUFDWEMsWUFBWTtRQUNkO1FBRUFDLFFBQVFDLEdBQUcsQ0FBQztRQUNackIsT0FBT0csT0FBTyxHQUFHUix1REFBZ0IsQ0FBQ0MsYUFBYVcsTUFDNUNnQixJQUFJLENBQUMsQ0FBQzVCO1lBQ0x5QixRQUFRQyxHQUFHLENBQUM7WUFFWiwwREFBMEQ7WUFDMUQxQixTQUFTVSxVQUFVLENBQUNtQixFQUFFLENBQUMsYUFBYTtnQkFDbENKLFFBQVFDLEdBQUcsQ0FBQztZQUNkO1lBRUExQixTQUFTVSxVQUFVLENBQUNtQixFQUFFLENBQUMsU0FBUyxDQUFDQztnQkFDL0JMLFFBQVFNLEtBQUssQ0FBQywrQkFBK0JEO1lBQy9DO1lBRUE5QixTQUFTVSxVQUFVLENBQUNtQixFQUFFLENBQUMsZ0JBQWdCO2dCQUNyQ0osUUFBUUMsR0FBRyxDQUFDO2dCQUNaLGdDQUFnQztnQkFDaENyQixPQUFPRSxJQUFJLEdBQUc7Z0JBQ2RGLE9BQU9HLE9BQU8sR0FBRztZQUNuQjtZQUVBUixTQUFTVSxVQUFVLENBQUNtQixFQUFFLENBQUMsZUFBZTtnQkFDcENKLFFBQVFDLEdBQUcsQ0FBQztZQUNkO1lBRUEsT0FBTzFCO1FBQ1QsR0FDQ2dDLEtBQUssQ0FBQyxDQUFDRDtZQUNOTixRQUFRTSxLQUFLLENBQUMsZ0NBQWdDQTtZQUM5QzFCLE9BQU9HLE9BQU8sR0FBRztZQUNqQixNQUFNdUI7UUFDUjtJQUNKO0lBRUEsSUFBSTtRQUNGMUIsT0FBT0UsSUFBSSxHQUFHLE1BQU1GLE9BQU9HLE9BQU87SUFDcEMsRUFBRSxPQUFPeUIsR0FBRztRQUNWUixRQUFRTSxLQUFLLENBQUMsK0JBQStCRTtRQUM3QzVCLE9BQU9HLE9BQU8sR0FBRztRQUVqQixzREFBc0Q7UUFDdEQwQixXQUFXO1lBQ1Q3QixPQUFPRyxPQUFPLEdBQUc7UUFDbkIsR0FBRztRQUVILE1BQU15QjtJQUNSO0lBRUEsT0FBTzVCLE9BQU9FLElBQUk7QUFDcEI7QUFFb0I7QUFDcEIsaUVBQWVFLFNBQVNBLEVBQUEiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWFrYXNcXERvd25sb2Fkc1xcT3BlblByZXBcXGxpYlxcbW9uZ29kYi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnXHJcblxyXG5jb25zdCBNT05HT0RCX1VSSSA9IHByb2Nlc3MuZW52Lk1PTkdPREJfVVJJIHx8ICdtb25nb2RiK3NydjovL2Fha2FzaHJhamVuZHJhbjIwMDRfZGJfdXNlcjpyRk1WN09CV1NweFM1QkZrQG9wZW5wcmVwLjJqZnpoa2kubW9uZ29kYi5uZXQvP3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eSZhcHBOYW1lPU9wZW5QcmVwJ1xyXG5cclxuaWYgKCFNT05HT0RCX1VSSSkge1xyXG4gIHRocm93IG5ldyBFcnJvcignUGxlYXNlIGRlZmluZSB0aGUgTU9OR09EQl9VUkkgZW52aXJvbm1lbnQgdmFyaWFibGUgaW5zaWRlIC5lbnYubG9jYWwnKVxyXG59XHJcblxyXG4vKipcclxuICogR2xvYmFsIGlzIHVzZWQgaGVyZSB0byBtYWludGFpbiBhIGNhY2hlZCBjb25uZWN0aW9uIGFjcm9zcyBob3QgcmVsb2Fkc1xyXG4gKiBpbiBkZXZlbG9wbWVudC4gVGhpcyBwcmV2ZW50cyBjb25uZWN0aW9ucyBncm93aW5nIGV4cG9uZW50aWFsbHlcclxuICogZHVyaW5nIEFQSSBSb3V0ZSB1c2FnZS5cclxuICovXHJcbmRlY2xhcmUgZ2xvYmFsIHtcclxuICB2YXIgbW9uZ29vc2U6IHtcclxuICAgIGNvbm46IHR5cGVvZiBtb25nb29zZSB8IG51bGxcclxuICAgIHByb21pc2U6IFByb21pc2U8dHlwZW9mIG1vbmdvb3NlPiB8IG51bGxcclxuICB9XHJcbn1cclxuXHJcbmxldCBjYWNoZWQgPSBnbG9iYWwubW9uZ29vc2VcclxuXHJcbmlmICghY2FjaGVkKSB7XHJcbiAgY2FjaGVkID0gZ2xvYmFsLm1vbmdvb3NlID0geyBjb25uOiBudWxsLCBwcm9taXNlOiBudWxsIH1cclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gY29ubmVjdERCKCkge1xyXG4gIC8vIENoZWNrIGlmIGNvbm5lY3Rpb24gaXMgc3RpbGwgYWxpdmVcclxuICBpZiAoY2FjaGVkLmNvbm4gJiYgbW9uZ29vc2UuY29ubmVjdGlvbi5yZWFkeVN0YXRlID09PSAxKSB7XHJcbiAgICByZXR1cm4gY2FjaGVkLmNvbm5cclxuICB9XHJcblxyXG4gIC8vIFJlc2V0IGNhY2hlZCBjb25uZWN0aW9uIGlmIGl0J3Mgbm90IGNvbm5lY3RlZFxyXG4gIGlmIChjYWNoZWQuY29ubiAmJiBtb25nb29zZS5jb25uZWN0aW9uLnJlYWR5U3RhdGUgIT09IDEpIHtcclxuICAgIGNhY2hlZC5jb25uID0gbnVsbFxyXG4gICAgY2FjaGVkLnByb21pc2UgPSBudWxsXHJcbiAgfVxyXG5cclxuICBpZiAoIWNhY2hlZC5wcm9taXNlKSB7XHJcbiAgICBjb25zdCBvcHRzID0ge1xyXG4gICAgICBidWZmZXJDb21tYW5kczogZmFsc2UsXHJcbiAgICAgIG1heFBvb2xTaXplOiAyMCwgLy8gSW5jcmVhc2VkIHBvb2wgc2l6ZSBmb3IgYmV0dGVyIGNvbmN1cnJlbmN5XHJcbiAgICAgIG1pblBvb2xTaXplOiA1LCAvLyBNYWludGFpbiBtaW5pbXVtIGNvbm5lY3Rpb25zXHJcbiAgICAgIHNlcnZlclNlbGVjdGlvblRpbWVvdXRNUzogMzAwMDAsIC8vIEluY3JlYXNlZCB0aW1lb3V0XHJcbiAgICAgIHNvY2tldFRpbWVvdXRNUzogMCwgLy8gTm8gdGltZW91dCBmb3Igc29ja2V0IG9wZXJhdGlvbnNcclxuICAgICAgY29ubmVjdFRpbWVvdXRNUzogMzAwMDAsIC8vIEluY3JlYXNlZCBjb25uZWN0aW9uIHRpbWVvdXRcclxuICAgICAgZmFtaWx5OiA0LCAvLyBVc2UgSVB2NCwgc2tpcCB0cnlpbmcgSVB2NlxyXG4gICAgICByZXRyeVdyaXRlczogdHJ1ZSxcclxuICAgICAgbWF4SWRsZVRpbWVNUzogMzAwMDAwLCAvLyA1IG1pbnV0ZXMgLSBrZWVwIGNvbm5lY3Rpb25zIGFsaXZlIGxvbmdlclxyXG4gICAgICBoZWFydGJlYXRGcmVxdWVuY3lNUzogMTAwMDAsIC8vIENoZWNrIGNvbm5lY3Rpb24gaGVhbHRoIGV2ZXJ5IDEwIHNlY29uZHNcclxuICAgICAgYXV0b0luZGV4OiBmYWxzZSwgLy8gRG9uJ3QgYnVpbGQgaW5kZXhlcyBpbiBwcm9kdWN0aW9uXHJcbiAgICAgIGF1dG9DcmVhdGU6IGZhbHNlLCAvLyBEb24ndCBjcmVhdGUgY29sbGVjdGlvbnMgYXV0b21hdGljYWxseVxyXG4gICAgfVxyXG5cclxuICAgIGNvbnNvbGUubG9nKCfwn5SMIENvbm5lY3RpbmcgdG8gTW9uZ29EQi4uLicpXHJcbiAgICBjYWNoZWQucHJvbWlzZSA9IG1vbmdvb3NlLmNvbm5lY3QoTU9OR09EQl9VUkksIG9wdHMpXHJcbiAgICAgIC50aGVuKChtb25nb29zZSkgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCfinIUgU3VjY2Vzc2Z1bGx5IGNvbm5lY3RlZCB0byBNb25nb0RCJylcclxuICAgICAgICBcclxuICAgICAgICAvLyBTZXQgdXAgY29ubmVjdGlvbiBldmVudCBsaXN0ZW5lcnMgZm9yIGJldHRlciBtb25pdG9yaW5nXHJcbiAgICAgICAgbW9uZ29vc2UuY29ubmVjdGlvbi5vbignY29ubmVjdGVkJywgKCkgPT4ge1xyXG4gICAgICAgICAgY29uc29sZS5sb2coJ/Cfk6EgTW9uZ29EQiBjb25uZWN0aW9uIGVzdGFibGlzaGVkJylcclxuICAgICAgICB9KVxyXG4gICAgICAgIFxyXG4gICAgICAgIG1vbmdvb3NlLmNvbm5lY3Rpb24ub24oJ2Vycm9yJywgKGVycikgPT4ge1xyXG4gICAgICAgICAgY29uc29sZS5lcnJvcign4p2MIE1vbmdvREIgY29ubmVjdGlvbiBlcnJvcjonLCBlcnIpXHJcbiAgICAgICAgfSlcclxuICAgICAgICBcclxuICAgICAgICBtb25nb29zZS5jb25uZWN0aW9uLm9uKCdkaXNjb25uZWN0ZWQnLCAoKSA9PiB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZygn8J+UjCBNb25nb0RCIGRpc2Nvbm5lY3RlZCcpXHJcbiAgICAgICAgICAvLyBSZXNldCBjYWNoZSB3aGVuIGRpc2Nvbm5lY3RlZFxyXG4gICAgICAgICAgY2FjaGVkLmNvbm4gPSBudWxsXHJcbiAgICAgICAgICBjYWNoZWQucHJvbWlzZSA9IG51bGxcclxuICAgICAgICB9KVxyXG4gICAgICAgIFxyXG4gICAgICAgIG1vbmdvb3NlLmNvbm5lY3Rpb24ub24oJ3JlY29ubmVjdGVkJywgKCkgPT4ge1xyXG4gICAgICAgICAgY29uc29sZS5sb2coJ/CflIQgTW9uZ29EQiByZWNvbm5lY3RlZCcpXHJcbiAgICAgICAgfSlcclxuICAgICAgICBcclxuICAgICAgICByZXR1cm4gbW9uZ29vc2VcclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBNb25nb0RCIGNvbm5lY3Rpb24gZmFpbGVkOicsIGVycm9yKVxyXG4gICAgICAgIGNhY2hlZC5wcm9taXNlID0gbnVsbFxyXG4gICAgICAgIHRocm93IGVycm9yXHJcbiAgICAgIH0pXHJcbiAgfVxyXG5cclxuICB0cnkge1xyXG4gICAgY2FjaGVkLmNvbm4gPSBhd2FpdCBjYWNoZWQucHJvbWlzZVxyXG4gIH0gY2F0Y2ggKGUpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBNb25nb0RCIGNvbm5lY3Rpb24gZXJyb3I6JywgZSlcclxuICAgIGNhY2hlZC5wcm9taXNlID0gbnVsbFxyXG4gICAgXHJcbiAgICAvLyBJZiBjb25uZWN0aW9uIGZhaWxzLCB0cnkgdG8gcmVjb25uZWN0IGFmdGVyIGEgZGVsYXlcclxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICBjYWNoZWQucHJvbWlzZSA9IG51bGxcclxuICAgIH0sIDUwMDApXHJcbiAgICBcclxuICAgIHRocm93IGVcclxuICB9XHJcblxyXG4gIHJldHVybiBjYWNoZWQuY29ublxyXG59XHJcblxyXG5leHBvcnQgeyBjb25uZWN0REIgfVxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0REIiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJNT05HT0RCX1VSSSIsInByb2Nlc3MiLCJlbnYiLCJFcnJvciIsImNhY2hlZCIsImdsb2JhbCIsImNvbm4iLCJwcm9taXNlIiwiY29ubmVjdERCIiwiY29ubmVjdGlvbiIsInJlYWR5U3RhdGUiLCJvcHRzIiwiYnVmZmVyQ29tbWFuZHMiLCJtYXhQb29sU2l6ZSIsIm1pblBvb2xTaXplIiwic2VydmVyU2VsZWN0aW9uVGltZW91dE1TIiwic29ja2V0VGltZW91dE1TIiwiY29ubmVjdFRpbWVvdXRNUyIsImZhbWlseSIsInJldHJ5V3JpdGVzIiwibWF4SWRsZVRpbWVNUyIsImhlYXJ0YmVhdEZyZXF1ZW5jeU1TIiwiYXV0b0luZGV4IiwiYXV0b0NyZWF0ZSIsImNvbnNvbGUiLCJsb2ciLCJjb25uZWN0IiwidGhlbiIsIm9uIiwiZXJyIiwiZXJyb3IiLCJjYXRjaCIsImUiLCJzZXRUaW1lb3V0Il0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/mongodb.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Finterview%2Fresume-analysis%2Froute&page=%2Fapi%2Finterview%2Fresume-analysis%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Finterview%2Fresume-analysis%2Froute.ts&appDir=C%3A%5CUsers%5Caakas%5CDownloads%5COpenPrep%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Caakas%5CDownloads%5COpenPrep&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Finterview%2Fresume-analysis%2Froute&page=%2Fapi%2Finterview%2Fresume-analysis%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Finterview%2Fresume-analysis%2Froute.ts&appDir=C%3A%5CUsers%5Caakas%5CDownloads%5COpenPrep%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Caakas%5CDownloads%5COpenPrep&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var C_Users_aakas_Downloads_OpenPrep_app_api_interview_resume_analysis_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app/api/interview/resume-analysis/route.ts */ \"(rsc)/./app/api/interview/resume-analysis/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/interview/resume-analysis/route\",\n        pathname: \"/api/interview/resume-analysis\",\n        filename: \"route\",\n        bundlePath: \"app/api/interview/resume-analysis/route\"\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || '',\n    resolvedPagePath: \"C:\\\\Users\\\\aakas\\\\Downloads\\\\OpenPrep\\\\app\\\\api\\\\interview\\\\resume-analysis\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_aakas_Downloads_OpenPrep_app_api_interview_resume_analysis_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/interview/resume-analysis/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        if (!(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Finterview%2Fresume-analysis%2Froute&page=%2Fapi%2Finterview%2Fresume-analysis%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Finterview%2Fresume-analysis%2Froute.ts&appDir=C%3A%5CUsers%5Caakas%5CDownloads%5COpenPrep%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Caakas%5CDownloads%5COpenPrep&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "mongoose":
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("mongoose");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/semver","vendor-chunks/bcryptjs","vendor-chunks/jsonwebtoken","vendor-chunks/lodash.includes","vendor-chunks/jws","vendor-chunks/lodash.once","vendor-chunks/jwa","vendor-chunks/lodash.isinteger","vendor-chunks/ecdsa-sig-formatter","vendor-chunks/lodash.isplainobject","vendor-chunks/ms","vendor-chunks/lodash.isstring","vendor-chunks/lodash.isnumber","vendor-chunks/lodash.isboolean","vendor-chunks/safe-buffer","vendor-chunks/buffer-equal-constant-time"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Finterview%2Fresume-analysis%2Froute&page=%2Fapi%2Finterview%2Fresume-analysis%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Finterview%2Fresume-analysis%2Froute.ts&appDir=C%3A%5CUsers%5Caakas%5CDownloads%5COpenPrep%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Caakas%5CDownloads%5COpenPrep&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();