[
  {
    "id": "q001",
    "title": "How to approach TCS aptitude test preparation?",
    "content": "I'm appearing for TCS placement drive next month. Can someone guide me on how to prepare for their aptitude test? What topics should I focus on and what's the difficulty level?",
    "author": "student_2024",
    "authorReputation": 45,
    "tags": ["tcs", "aptitude", "placement", "preparation"],
    "difficulty": "easy",
    "upvotes": 23,
    "downvotes": 2,
    "views": 156,
    "hasAcceptedAnswer": true,
    "createdAt": "2024-10-12T10:30:00Z",
    "updatedAt": "2024-10-12T10:30:00Z",
    "answers": [
      {
        "id": "a001",
        "content": "For TCS aptitude test, focus on these key areas:\n\n1. **Quantitative Aptitude** (40% weightage):\n   - Profit & Loss, Simple & Compound Interest\n   - Time & Work, Time & Distance\n   - Percentages, Ratios & Proportions\n   - Number Systems, Averages\n\n2. **Logical Reasoning** (35% weightage):\n   - Blood Relations, Coding-Decoding\n   - Series Completion, Pattern Recognition\n   - Puzzles, Seating Arrangements\n\n3. **Verbal Ability** (25% weightage):\n   - Reading Comprehension\n   - Grammar, Sentence Correction\n   - Synonyms, Antonyms\n\n**Preparation Strategy:**\n- Practice 2-3 hours daily for 2 months\n- Solve previous year papers (at least 10)\n- Time management is crucial - 90 minutes for 80 questions\n- Use RS Aggarwal for Quant and Logical Reasoning\n- Practice online mock tests regularly\n\n**Pro Tips:**\n- TCS has negative marking (-1 for wrong, +3 for correct)\n- Don't guess randomly, eliminate options first\n- Focus on accuracy over speed initially\n- Keep a formula sheet for quick revision",
        "author": "placement_expert",
        "authorReputation": 892,
        "upvotes": 34,
        "downvotes": 1,
        "isAccepted": true,
        "expertVerified": true,
        "createdAt": "2024-10-12T11:15:00Z",
        "updatedAt": "2024-10-12T11:15:00Z"
      },
      {
        "id": "a002",
        "content": "I cleared TCS aptitude last year. Here's my experience:\n\n- The test is moderate difficulty, not too hard\n- Time management is the biggest challenge\n- I practiced using TCS previous papers from 2019-2023\n- IndiaBix website helped a lot for practice\n- Make sure to attempt all questions you're confident about first\n- Leave difficult ones for the end\n\nGood luck! üçÄ",
        "author": "tcs_selected_2023",
        "authorReputation": 156,
        "upvotes": 18,
        "downvotes": 0,
        "isAccepted": false,
        "expertVerified": false,
        "createdAt": "2024-10-12T14:22:00Z",
        "updatedAt": "2024-10-12T14:22:00Z"
      }
    ]
  },
  {
    "id": "q002",
    "title": "Best data structures to focus on for coding interviews?",
    "content": "I have coding rounds coming up for Infosys, Wipro, and Accenture. Which data structures should I prioritize? I have limited time (3 weeks) and want to focus on the most important ones.",
    "author": "coder_prep",
    "authorReputation": 78,
    "tags": ["coding", "data-structures", "interview", "infosys", "wipro", "accenture"],
    "difficulty": "medium",
    "upvotes": 31,
    "downvotes": 3,
    "views": 234,
    "hasAcceptedAnswer": true,
    "createdAt": "2024-10-10T09:45:00Z",
    "updatedAt": "2024-10-10T09:45:00Z",
    "answers": [
      {
        "id": "a003",
        "content": "For service-based companies like Infosys, Wipro, and Accenture, focus on these **high-priority** data structures:\n\n## Must Know (Week 1-2):\n1. **Arrays & Strings** - 40% of questions\n   - Two pointers, sliding window\n   - Sorting and searching\n   - String manipulation\n\n2. **Linked Lists** - 20% of questions\n   - Reversal, cycle detection\n   - Merge operations\n\n3. **Stacks & Queues** - 15% of questions\n   - Balanced parentheses\n   - Next greater element\n\n## Good to Know (Week 3):\n4. **Trees** (Binary Trees mainly)\n   - Traversals (inorder, preorder, postorder)\n   - Height, diameter calculations\n\n5. **Hashing** (HashMap/HashSet)\n   - Frequency counting\n   - Two sum problems\n\n## Skip for Now:\n- Advanced trees (AVL, Red-Black)\n- Graphs (unless specifically mentioned)\n- Dynamic Programming (rare in these companies)\n\n**Practice Strategy:**\n- Solve 5-10 problems per data structure\n- Focus on easy-medium problems on LeetCode\n- Practice writing clean, readable code\n- Time yourself - aim for 20-30 minutes per problem",
        "author": "coding_mentor",
        "authorReputation": 1245,
        "upvotes": 42,
        "downvotes": 2,
        "isAccepted": true,
        "expertVerified": true,
        "createdAt": "2024-10-10T12:30:00Z",
        "updatedAt": "2024-10-10T12:30:00Z"
      }
    ]
  },
  {
    "id": "q003",
    "title": "Common HR questions for fresher interviews?",
    "content": "What are the most common HR questions asked in campus placements? I'm particularly nervous about behavioral questions. Any tips on how to structure answers?",
    "author": "nervous_fresher",
    "authorReputation": 12,
    "tags": ["hr", "interview", "behavioral", "fresher", "campus-placement"],
    "difficulty": "easy",
    "upvotes": 19,
    "downvotes": 1,
    "views": 189,
    "hasAcceptedAnswer": false,
    "createdAt": "2024-10-08T16:20:00Z",
    "updatedAt": "2024-10-08T16:20:00Z",
    "answers": [
      {
        "id": "a004",
        "content": "Here are the **most common HR questions** for freshers:\n\n## Basic Questions:\n1. Tell me about yourself\n2. Why should we hire you?\n3. What are your strengths and weaknesses?\n4. Where do you see yourself in 5 years?\n5. Why this company?\n6. Are you willing to relocate?\n7. What motivates you?\n\n## Behavioral Questions:\n1. Describe a challenging situation you faced\n2. Tell me about a time you worked in a team\n3. How do you handle pressure?\n4. Describe a time you failed and what you learned\n\n## **STAR Method** for behavioral questions:\n- **S**ituation: Set the context\n- **T**ask: Explain what you needed to do\n- **A**ction: Describe what you did\n- **R**esult: Share the outcome\n\n## Sample Answer Structure:\n**Q: Tell me about yourself**\n\n\"I'm a final year Computer Science student at [College]. I'm passionate about technology and have worked on projects involving [mention 2-3 technologies]. During my internship at [Company/Project], I [specific achievement]. I'm particularly interested in [relevant field] and excited about the opportunity to contribute to [Company name]'s mission.\"\n\n**Pro Tips:**\n- Keep answers concise (1-2 minutes max)\n- Use specific examples, not generic statements\n- Research the company thoroughly\n- Practice with friends or in front of a mirror\n- Maintain good eye contact and posture",
        "author": "hr_coach",
        "authorReputation": 567,
        "upvotes": 28,
        "downvotes": 0,
        "isAccepted": false,
        "expertVerified": true,
        "createdAt": "2024-10-08T18:45:00Z",
        "updatedAt": "2024-10-08T18:45:00Z"
      }
    ]
  },
  {
    "id": "q004",
    "title": "Difference between SQL JOIN types with examples?",
    "content": "I keep getting confused between different types of JOINs in SQL. Can someone explain INNER, LEFT, RIGHT, and FULL OUTER JOIN with simple examples? This comes up frequently in technical interviews.",
    "author": "sql_learner",
    "authorReputation": 34,
    "tags": ["sql", "database", "joins", "technical", "interview"],
    "difficulty": "medium",
    "upvotes": 27,
    "downvotes": 2,
    "views": 178,
    "hasAcceptedAnswer": true,
    "createdAt": "2024-10-05T11:30:00Z",
    "updatedAt": "2024-10-05T11:30:00Z",
    "answers": [
      {
        "id": "a005",
        "content": "Great question! Let me explain SQL JOINs with a simple example:\n\n## Sample Tables:\n\n**Students Table:**\n```\nstudent_id | name    | dept_id\n1          | Alice   | 101\n2          | Bob     | 102\n3          | Charlie | NULL\n```\n\n**Departments Table:**\n```\ndept_id | dept_name\n101     | CS\n102     | ECE\n103     | MECH\n```\n\n## JOIN Types:\n\n### 1. INNER JOIN\nReturns only matching records from both tables.\n```sql\nSELECT s.name, d.dept_name \nFROM Students s \nINNER JOIN Departments d ON s.dept_id = d.dept_id;\n```\n**Result:**\n```\nAlice  | CS\nBob    | ECE\n```\n\n### 2. LEFT JOIN (LEFT OUTER JOIN)\nReturns all records from left table + matching from right.\n```sql\nSELECT s.name, d.dept_name \nFROM Students s \nLEFT JOIN Departments d ON s.dept_id = d.dept_id;\n```\n**Result:**\n```\nAlice   | CS\nBob     | ECE\nCharlie | NULL\n```\n\n### 3. RIGHT JOIN (RIGHT OUTER JOIN)\nReturns all records from right table + matching from left.\n```sql\nSELECT s.name, d.dept_name \nFROM Students s \nRIGHT JOIN Departments d ON s.dept_id = d.dept_id;\n```\n**Result:**\n```\nAlice | CS\nBob   | ECE\nNULL  | MECH\n```\n\n### 4. FULL OUTER JOIN\nReturns all records from both tables.\n```sql\nSELECT s.name, d.dept_name \nFROM Students s \nFULL OUTER JOIN Departments d ON s.dept_id = d.dept_id;\n```\n**Result:**\n```\nAlice   | CS\nBob     | ECE\nCharlie | NULL\nNULL    | MECH\n```\n\n## Memory Trick:\n- **INNER**: Only the intersection (common part)\n- **LEFT**: Everything from left table\n- **RIGHT**: Everything from right table  \n- **FULL OUTER**: Everything from both tables\n\nHope this helps! üéØ",
        "author": "database_expert",
        "authorReputation": 1089,
        "upvotes": 45,
        "downvotes": 1,
        "isAccepted": true,
        "expertVerified": true,
        "createdAt": "2024-10-05T13:15:00Z",
        "updatedAt": "2024-10-05T13:15:00Z"
      }
    ]
  },
  {
    "id": "q005",
    "title": "How to explain projects effectively in technical interviews?",
    "content": "I have done 2-3 projects but I struggle to explain them clearly during interviews. Interviewers often ask deep technical questions about implementation details. How should I structure my project explanations?",
    "author": "project_confused",
    "authorReputation": 23,
    "tags": ["projects", "technical-interview", "explanation", "presentation"],
    "difficulty": "medium",
    "upvotes": 22,
    "downvotes": 0,
    "views": 145,
    "hasAcceptedAnswer": false,
    "createdAt": "2024-10-03T14:20:00Z",
    "updatedAt": "2024-10-03T14:20:00Z",
    "answers": [
      {
        "id": "a006",
        "content": "Here's a proven **framework** for explaining projects effectively:\n\n## The STAR-T Method:\n\n### 1. **S**ituation (Problem Statement)\n\"We needed to solve [specific problem] for [target users]\"\n\n### 2. **T**echnology Stack\n\"I used [Frontend], [Backend], [Database], [Other tools]\"\n\n### 3. **A**rchitecture & Approach\n\"The system follows [architecture pattern] with [key components]\"\n\n### 4. **R**esults & Impact\n\"This resulted in [quantifiable benefits/outcomes]\"\n\n### 5. **T**echnical Challenges\n\"The main challenges were [specific issues] which I solved by [solutions]\"\n\n## Example:\n\n**Project: E-commerce Website**\n\n**Situation:** \"Our college needed an online platform for students to buy/sell used books, as the existing process was inefficient.\"\n\n**Technology:** \"I built it using React.js frontend, Node.js/Express backend, MongoDB database, and integrated Razorpay for payments.\"\n\n**Architecture:** \"It follows MVC architecture with RESTful APIs. The frontend communicates with backend through API calls, and user data is stored in MongoDB with proper authentication using JWT tokens.\"\n\n**Results:** \"The platform now has 200+ active users, reduced book exchange time from days to hours, and processed 50+ transactions in the first month.\"\n\n**Technical Challenges:** \"The main challenge was implementing real-time chat between buyers and sellers. I solved this using Socket.io for WebSocket connections and optimized database queries to handle concurrent users.\"\n\n## **Deep Dive Preparation:**\nBe ready to explain:\n- Database schema design\n- API endpoints and their purposes\n- Security measures implemented\n- Performance optimizations\n- Error handling strategies\n- Testing approach\n\n## **Pro Tips:**\n- Draw diagrams if possible\n- Mention specific code snippets you're proud of\n- Discuss trade-offs you made\n- Show genuine passion for the project\n- Be honest about what you learned vs what you knew beforehand\n\nRemember: Interviewers want to see your **problem-solving approach**, not just the final product! üöÄ",
        "author": "interview_coach",
        "authorReputation": 734,
        "upvotes": 31,
        "downvotes": 1,
        "isAccepted": false,
        "expertVerified": true,
        "createdAt": "2024-10-03T16:45:00Z",
        "updatedAt": "2024-10-03T16:45:00Z"
      }
    ]
  }
]